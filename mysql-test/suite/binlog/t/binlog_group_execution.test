--source include/have_log_bin.inc

--let $ida= aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa
--let $idb= bbbbbbbb-bbbb-bbbb-bbbb-bbbbbbbbbbbb
--let $idc= cccccccc-cccc-cccc-cccc-cccccccccccc
--let $idd= dddddddd-dddd-dddd-dddd-dddddddddddd
--let $ide= eeeeeeee-eeee-eeee-eeee-eeeeeeeeeeee
--let $idf= ffffffff-ffff-ffff-ffff-ffffffffffff
--let $tab= `SELECT '\t'`

--echo ==== Valid and invlaid values for ugid_next ====

SELECT @@SESSION.UGID_NEXT;
SELECT @@SESSION.UGID_NEXT_LIST;

SET @@SESSION.UGID_NEXT= 'ANONYMOUS';
SELECT @@SESSION.UGID_NEXT;

SET @@SESSION.UGID_NEXT= 'AUTOMATIC';
SELECT @@SESSION.UGID_NEXT;

eval SET @@SESSION.UGID_NEXT= '$ida:10';
SELECT @@SESSION.UGID_NEXT;

eval SET @@SESSION.UGID_NEXT= '$ida:0x10';
SELECT @@SESSION.UGID_NEXT;

eval SET @@SESSION.UGID_NEXT= '$ida:010';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:10#';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:1-10';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:1:3';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:1,$ida:3';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
SET @@SESSION.UGID_NEXT= NULL;
SELECT @@SESSION.UGID_NEXT;

--error 1232 # ER_WRONG_VALUE_FOR_VAR
SET @@SESSION.UGID_NEXT= 10;
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
SET @@SESSION.UGID_NEXT= '10';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:0';
SELECT @@SESSION.UGID_NEXT;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT= '$ida:0x8000000000000000';
SELECT @@SESSION.UGID_NEXT;

--echo ==== Valid and invalid values for ugid_next_list ====

SELECT @@SESSION.UGID_NEXT_LIST;

SET @@SESSION.UGID_NEXT_LIST= '';
SELECT @@SESSION.UGID_NEXT_LIST;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
SET @@SESSION.UGID_NEXT_LIST= '#';
SELECT @@SESSION.UGID_NEXT_LIST;

--error 1231 # ER_WRONG_VALUE_FOR_VAR
eval SET @@SESSION.UGID_NEXT_LIST= '$ida:1:$ida:1';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= NULL;
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$ida:1';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idb:1-10';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idc:1-10:2-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idd :1-10:11-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$ide: 1-10:14-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idf:4 -10:1-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$ida:4- 10:8-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idb:4-10 :4-20';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idc:4-10:15-20:11-14 ';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idd
: 1 - 10,
$ide$tab:$tab 11 -$tab 20$tab';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$ida:1,$idb:2,$idc:3';
SELECT @@SESSION.UGID_NEXT_LIST;

eval SET @@SESSION.UGID_NEXT_LIST= '$idc:1,$idb:2,$ida:3';
SELECT @@SESSION.UGID_NEXT_LIST;

--echo ==== Conditions when all variables are settable / readonly ====

# UGID_HAS_ONGOING_SUPER_GROUP is read-only
SELECT @@SESSION.UGID_HAS_ONGOING_SUPER_GROUP;
# Read-only.
--error 1238 # ER_INCORRECT_GLOBAL_LOCAL_VAR
SET UGID_HAS_ONGOING_SUPER_GROUP= 1;
--error 1238 # ER_INCORRECT_GLOBAL_LOCAL_VAR
SELECT @@GLOBAL.UGID_HAS_ONGOING_SUPER_GROUP;

SET UGID_NEXT_LIST = NULL, UGID_NEXT = 'AUTOMATIC', UGID_END = 0, UGID_COMMIT = 0;

CREATE TABLE variables (var VARCHAR(100), val VARCHAR(100), id INT PRIMARY KEY AUTO_INCREMENT);
eval INSERT INTO variables(var, val) VALUES
  ('ugid_next', '"$ida:1"'),
  ('ugid_next_list', '"$ida:1"'),
  ('ugid_end', '1'),
  ('ugid_commit', '1');
--eval CREATE FUNCTION f() RETURNS INT BEGIN RETURN 1; END
CREATE TABLE t1 (a INT);
CREATE USER nonsuper@localhost;
GRANT SELECT ON *.* TO nonsuper@localhost;
--connect (nonsuper,localhost,nonsuper,,)
--connection default

--let $id= 1
while ($id <= 4)
{
  --let $var= `SELECT var FROM variables WHERE id = $id`
  --let $val= `SELECT val FROM variables WHERE id = $id`

  --echo ---- @@SESSION.$var ----

  # is session-only
  --error 1238 # ER_INCORRECT_GLOBAL_LOCAL_VAR
  eval SELECT @@GLOBAL.$var;
  --error 1228 # ER_LOCAL_VARIABLE
  eval SET @@GLOBAL.$var= $val;

  # can't set value from stored function
  --eval CREATE FUNCTION set_var() RETURNS INT BEGIN SET @@SESSION.$var = $val; RETURN 1; END
  --error 1739 # ER_VARIABLE_NOT_SETTABLE_IN_SUB_STATEMENT
  SELECT set_var();
  DROP FUNCTION set_var;

  # can't set value from trigger
  eval CREATE TRIGGER t BEFORE INSERT ON t1 FOR EACH ROW SET @@SESSION.$var = $val;
  --error 1739 # ER_VARIABLE_NOT_SETTABLE_IN_SUB_STATEMENT
  INSERT INTO t1 VALUES (1);
  DROP TRIGGER t;

  # can't set value when invoking SF
  --error 1744 # ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION
  eval SET @@SESSION.$var = f()

  # must be SUPER
  --connection nonsuper
  --error 1227 # ER_SPECIFIC_ACCESS_DENIED_ERROR
  eval SET @@SESSION.$var = $val
  --connection default

  eval SELECT @@SESSION.$var;

  --inc $id
}

DROP TABLE t1, variables;
DROP FUNCTION f;
DROP USER nonsuper@localhost;

SET UGID_NEXT_LIST = NULL;

# It is (unfortunately) possible to set the value from a stored
# procedure.  No user should do this, it's just weird, but was hard
# to prevent so instead we allow it.  Although this is unsupported, we
# have to check that at least there is no crash.
SET UGID_NEXT_LIST = NULL, UGID_NEXT = 'AUTOMATIC', UGID_END = 0, UGID_COMMIT = 0;
--delimiter |
eval CREATE PROCEDURE p ()
BEGIN
  SET @@SESSION.UGID_NEXT_LIST = '$ida:1-10';
  SET @@SESSION.UGID_NEXT = '$ida:50';
  SET @@SESSION.UGID_NEXT = '$ida:5';
  SET @@SESSION.UGID_COMMIT = 1;
  SET @@SESSION.UGID_END = 1;
  SET @@SESSION.UGID_NEXT_LIST = NULL;
  SET @@SESSION.UGID_NEXT = 'AUTOMATIC';
  SET @@SESSION.UGID_COMMIT = 0;
  SET @@SESSION.UGID_END = 0;
END|
--delimiter ;
CALL p();
DROP PROCEDURE p;

--echo ==== Conditions for combinations of UGID_NEXT and UGID_NEXT_LIST ====

# Cannot set ugid_next outside master-super-group, inside a transaction
SET UGID_NEXT_LIST = NULL;
BEGIN;
  --error 1740 # ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION
  eval SET UGID_NEXT_LIST = '$ida:1';
  --error 1740 # ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION
  eval SET UGID_NEXT = '$ida:1';
COMMIT;

# Cannot start master-super-group when ugid_next and ugid_next_list
# are incompatible.
eval SET @@SESSION.UGID_NEXT_LIST = '$ida:1', @@SESSION.UGID_NEXT = '$ida:2';
--error 1741 # ER_UGID_NEXT_IS_NOT_IN_UGID_NEXT_LIST
BEGIN;

# In a master-super-group where ugid_next_list != NULL, ugid_next can
# be set to values specified in ugid_next_list or to ANONYMOUS, but
# not to AUTOMATIC or to values outside ugid_next_list.
# ugid_next_list cannot be changed.
eval SET @@SESSION.UGID_NEXT_LIST = '$ida:1-2', @@SESSION.UGID_NEXT = '$ida:1';
COMMIT; # start master-super-group

eval SET @@SESSION.UGID_NEXT = '$ida:3';
--error 1741 # ER_UGID_NEXT_IS_NOT_IN_UGID_NEXT_LIST
COMMIT;
eval SET @@SESSION.UGID_NEXT = 'AUTOMATIC';
--error 1747 # ER_UGID_NEXT_CANT_BE_AUTOMATIC_IF_UGID_NEXT_LIST_IS_NON_NULL
COMMIT;

eval SET @@SESSION.UGID_NEXT = '$ida:1';
COMMIT;
eval SET @@SESSION.UGID_NEXT = '$ida:2';
COMMIT;
eval SET @@SESSION.UGID_NEXT = 'ANONYMOUS';
COMMIT;

--error 1743 # ER_CANT_CHANGE_UGID_NEXT_LIST_IN_SUPER_GROUP
eval SET @@SESSION.UGID_NEXT_LIST = '$ida:1-2';
--error 1743 # ER_CANT_CHANGE_UGID_NEXT_LIST_IN_SUPER_GROUP
eval SET @@SESSION.UGID_NEXT_LIST = '$ida:2';
--error 1743 # ER_CANT_CHANGE_UGID_NEXT_LIST_IN_SUPER_GROUP
eval SET @@SESSION.UGID_NEXT_LIST = NULL;

SET @@SESSION.UGID_COMMIT = 1;
COMMIT; # end master-super-group

# It is allowed to set ugid_next_list to an empty string.
eval SET @@SESSION.UGID_COMMIT = 0, @@SESSION.UGID_NEXT_LIST = '', @@SESSION.UGID_NEXT = '$ida:1';
--error 1741 # ER_UGID_NEXT_IS_NOT_IN_UGID_NEXT_LIST
COMMIT;
eval SET @@SESSION.UGID_NEXT = 'ANONYMOUS', @@SESSION.UGID_COMMIT = 1;
COMMIT; # end master-super-group

# In a master-super-group where ugid_next_list == NULL, neither
# ugid_next nor ugid_next_list is settable.

eval SET @@SESSION.UGID_NEXT_LIST = NULL, @@SESSION.UGID_NEXT = '$ida:1', @@SESSION.UGID_COMMIT = 0;
COMMIT; # start master-super-group
SELECT @@SESSION.UGID_NEXT_LIST;
--error 1742 # ER_CANT_CHANGE_UGID_NEXT_IN_SUPER_GROUP_WHEN_UGID_NEXT_LIST_IS_NULL
eval SET @@SESSION.UGID_NEXT = '$ida:1';
--error 1743 # ER_CANT_CHANGE_UGID_NEXT_LIST_IN_SUPER_GROUP
eval SET @@SESSION.UGID_NEXT_LIST = NULL;
--error 1743 # ER_CANT_CHANGE_UGID_NEXT_LIST_IN_SUPER_GROUP
eval SET @@SESSION.UGID_NEXT_LIST = '$ida:1';
SET @@SESSION.UGID_COMMIT = 1;
COMMIT; # end master-super-group

# If UGID_NEXT_LIST == NULL and UGID_NEXT == SID:GNO, then it is not
# allowed to have UGID_END = 1 unless UGID_COMMIT = 1.
eval SET @@SESSION.UGID_NEXT_LIST = NULL, @@SESSION.UGID_NEXT = '$ida:1', @@SESSION.UGID_END = 1, @@SESSION.UGID_COMMIT = 0;
--error 1749
COMMIT;

SET @@SESSION.UGID_COMMIT = 0, @@SESSION.UGID_NEXT = AUTOMATIC, @@SESSION.UGID_NEXT_LIST = NULL;

--echo ==== Conditions for executing transactions ====

# one group split over two super-groups
eval SET UGID_NEXT = '$ida:1', UGID_END = 0, UGID_COMMIT = 1;
COMMIT;
SET UGID_END = 1;
COMMIT;

# if you try to re-execute the group after it has been ended, it
# should be skipped and a warning should be generated
COMMIT;
