#
# This test shows DISCARD/IMPORT of a remote tablespace.
#
SET default_storage_engine=InnoDB;
SET GLOBAL innodb_file_per_table=ON;
DROP TABLE IF EXISTS t1;
#
# CREATE TABLE ... DATA DIRECTORY
# combined with  WL#5522 - Transportable Tablespace
# Create the tablespace in MYSQL_TMP_DIR/alt_dir
# InnoDB will create the sub-directories if needed.
# Test that DISCARD and IMPORT work correctly.
#
CREATE TABLE t1 (a int KEY, b text) DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir';
INSERT INTO t1 VALUES (1, "Create the tablespace");
SELECT * FROM t1;
a	b
1	Create the tablespace
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.ibd
#
# Check that DATA DIRECTORY shows up in the SHOW CREATE TABLE  results.
#
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int(11) NOT NULL,
  `b` text,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir/'
#
# Backup the cfg and ibd files.
#
FLUSH TABLES t1 FOR EXPORT;
SELECT * FROM t1;
a	b
1	Create the tablespace
UNLOCK TABLES;
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.ibd
t1.ibd.bak
#
# Do some DDL and DML.
#
INSERT INTO t1 VALUES (2,'Remote table has been FLUSHed and UNLOCKed');
START TRANSACTION;
INSERT INTO t1 VALUES (12,'Transactional record inserted');
COMMIT;
START TRANSACTION;
INSERT INTO t1 VALUES (13,'Rollback this transactional record');
ROLLBACK;
SELECT COUNT(*) FROM t1;
COUNT(*)
3
SELECT * FROM t1;
a	b
1	Create the tablespace
2	Remote table has been FLUSHed and UNLOCKed
12	Transactional record inserted
ALTER TABLE t1 DROP PRIMARY KEY;
ALTER TABLE t1 ADD COLUMN c VARCHAR(50) DEFAULT NULL;
INSERT INTO t1(a,b,c) VALUES (2,'Duplicate value since primary key has been dropped','third column added');
SELECT * FROM t1;
a	b	c
1	Create the tablespace	NULL
2	Remote table has been FLUSHed and UNLOCKed	NULL
12	Transactional record inserted	NULL
2	Duplicate value since primary key has been dropped	third column added
#
# Make a second backup of the cfg and ibd files.
#
FLUSH TABLES t1 FOR EXPORT;
SELECT * FROM t1;
a	b	c
1	Create the tablespace	NULL
2	Remote table has been FLUSHed and UNLOCKed	NULL
12	Transactional record inserted	NULL
2	Duplicate value since primary key has been dropped	third column added
UNLOCK TABLES;
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
#
# DROP the table and make sure all files except the backups are gone.
#
DROP TABLE t1;
### files in MYSQL_DATA_DIR/test
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
#
# CREATE the table again.
#
CREATE TABLE t1 (a int KEY, b text) DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir';
INSERT INTO t1 VALUES (1, "Create the tablespace a second time");
SELECT * FROM t1;
a	b
1	Create the tablespace a second time
#
# DISCARD existing tablespace so backed-up .ibd which can be imported/restored
#
ALTER TABLE t1 DISCARD TABLESPACE;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Restore the second backup of cfg and ibd files.
#
"### files in MYSQL_TMP_DIR/alt_dir/test"
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Try to Import the second backup.  These backups have extra DDL and
# do not match the current frm file.
#
ALTER TABLE t1 IMPORT TABLESPACE;
ERROR HY000: InnoDB: Schema mismatch (Number of columns don't match, table has 5 columns but the tablespace meta-data file has 6 columns)
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	Error	InnoDB: Tablespace has been discarded for table 't1'
test.t1	check	error	Corrupt
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Restore the first backup of cfg and ibd files.
#
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Import the tablespace and do some DDL and DML.
#
ALTER TABLE t1 IMPORT TABLESPACE;
Warnings:
Warning	1814	InnoDB: Tablespace has been discarded for table 't1'
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	status	OK
SELECT COUNT(*) FROM t1;
COUNT(*)
1
SELECT * FROM t1;
a	b
1	Create the tablespace
INSERT INTO t1 VALUES (2,'Inserted record after IMPORT');
SELECT * FROM t1;
a	b
1	Create the tablespace
2	Inserted record after IMPORT
START TRANSACTION;
INSERT INTO t1 VALUES (12,'Transactional record inserted');
COMMIT;
START TRANSACTION;
INSERT INTO t1 VALUES (13,'Rollback this transactional record');
ROLLBACK;
SELECT * FROM t1;
a	b
1	Create the tablespace
2	Inserted record after IMPORT
12	Transactional record inserted
ALTER TABLE t1 DROP PRIMARY KEY;
ALTER TABLE t1 ADD COLUMN c VARCHAR(50) DEFAULT NULL;
INSERT INTO t1(a,b,c) VALUES (2,'Duplicate value since primary key has been dropped','third column added');
SELECT * FROM t1;
a	b	c
1	Create the tablespace	NULL
2	Inserted record after IMPORT	NULL
12	Transactional record inserted	NULL
2	Duplicate value since primary key has been dropped	third column added
#
# Show that the system tables have this table in them correctly.
#
SELECT name,n_cols,file_format,row_format
FROM information_schema.innodb_sys_tables WHERE name LIKE 'test%';
name	n_cols	file_format	row_format
test/t1	6	Antelope	Compact
SELECT name,file_format,row_format
FROM information_schema.innodb_sys_tablespaces;
name	file_format	row_format
test/t1	Antelope	Compact or Redundant
SELECT path FROM information_schema.innodb_sys_datafiles;
path
MYSQL_TMP_DIR/alt_dir/test/t1.ibd
#
# Drop the imported table and show that the system tables are updated.
#
DROP TABLE t1;
SELECT name,n_cols,file_format,row_format
FROM information_schema.innodb_sys_tables WHERE name LIKE 'test%';
name	n_cols	file_format	row_format
SELECT name,file_format,row_format
FROM information_schema.innodb_sys_tablespaces;
name	file_format	row_format
SELECT path FROM information_schema.innodb_sys_datafiles;
path
### files in MYSQL_DATA_DIR/test
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
#
# CREATE the table a third time.
#
CREATE TABLE t1 (a int KEY, b text) DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir';
INSERT INTO t1 VALUES (1, "Create the tablespace a third time");
SELECT * FROM t1;
a	b
1	Create the tablespace a third time
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
#
# Restart the server
# This test makes sure that you can still execute the FLUSH TABLES command
# after restarting the server and the tablespace can still be found.
#
SET GLOBAL innodb_file_per_table=ON;
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
SELECT * FROM t1;
a	b
1	Create the tablespace a third time
FLUSH TABLES t1 FOR EXPORT;
SELECT * FROM t1;
a	b
1	Create the tablespace a third time
UNLOCK TABLES;
#
# Restart the server again.  This test makes sure that you can
# still DISCARD a remote table after restarting the server.
#
SET GLOBAL innodb_file_per_table=ON;
SELECT * FROM t1;
a	b
1	Create the tablespace a third time
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
ALTER TABLE t1 DISCARD TABLESPACE;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Restore the backup of *.ibd and *.cfg files 
#
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Import the tablespace and check it out.
#
ALTER TABLE t1 IMPORT TABLESPACE;
SELECT * FROM t1;
a	b
1	Create the tablespace
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int(11) NOT NULL,
  `b` text,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir/'
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# DISCARD the tablespace again
#
ALTER TABLE t1 DISCARD TABLESPACE;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
### files in MYSQL_DATA_DIR/test
t1.frm
t1.isl
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
t1.ibt
#
# Restart the engine while the tablespace is in the discarded state
#
SET GLOBAL innodb_file_per_table=ON;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	Error	InnoDB: Tablespace has been discarded for table 't1'
test.t1	check	error	Corrupt
#
# Relocate this discarded file to the default directory
# instead of the remote directory it was discarded from.
# Put cfg, ibt, and idb files into the default directory.
# Delete the isl file and the remote cfg and ibt files.
# Restart the engine again.
# The tablespace is still in the discarded state.
#
### files in MYSQL_DATA_DIR/test
t1.cfg
t1.frm
t1.ibd
t1.ibt
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg.bak
t1.cfg.bak2
t1.ibd.bak
t1.ibd.bak2
# Restarting ...
SET GLOBAL innodb_file_per_table=ON;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	Error	InnoDB: Tablespace has been discarded for table 't1'
test.t1	check	error	Corrupt
#
# Try to import the tablespace.  It can only be imported from
# the location it was discarded from.
# The error message for 1810 (IO_READ_ERROR) refers to a local path
# so do not display it.
#
ALTER TABLE t1 IMPORT TABLESPACE;
SELECT * FROM t1;
ERROR HY000: InnoDB: Tablespace has been discarded for table 't1'
CHECK TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	check	Error	InnoDB: Tablespace has been discarded for table 't1'
test.t1	check	error	Corrupt
#
# Restore the ibd, ibt and cfg files to the remote directory.
# Delete the ibd, ibt and cfg files from the default directory.
# The isl file is missing, but is no longer needed since the
# remote location is in the data dictionary.
# Import the tablespace and check it out.
#
### files in MYSQL_DATA_DIR/test
t1.frm
### files in MYSQL_TMP_DIR/alt_dir/test
t1.cfg
t1.cfg.bak
t1.cfg.bak2
t1.ibd
t1.ibd.bak
t1.ibd.bak2
t1.ibt
ALTER TABLE t1 IMPORT TABLESPACE;
Warnings:
Warning	1814	InnoDB: Tablespace has been discarded for table 't1'
INSERT INTO t1 VALUES (2, "Insert this record after IMPORT");
SELECT * FROM t1;
a	b
1	Create the tablespace
2	Insert this record after IMPORT
SHOW CREATE TABLE t1;
Table	Create Table
t1	CREATE TABLE `t1` (
  `a` int(11) NOT NULL,
  `b` text,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 DATA DIRECTORY='MYSQL_TMP_DIR/alt_dir/'
#
# Show that the system tables have this table in them correctly.
#
SELECT name,n_cols,file_format,row_format
FROM information_schema.innodb_sys_tables WHERE name LIKE 'test%';
name	n_cols	file_format	row_format
test/t1	5	Antelope	Compact
SELECT name,file_format,row_format
FROM information_schema.innodb_sys_tablespaces;
name	file_format	row_format
test/t1	Antelope	Compact or Redundant
SELECT path FROM information_schema.innodb_sys_datafiles;
path
MYSQL_TMP_DIR/alt_dir/test/t1.ibd
#
# Cleanup
#
DROP TABLE t1;
### files in MYSQL_DATA_DIR/test
### files in MYSQL_TMP_DIR/alt_dir/test
