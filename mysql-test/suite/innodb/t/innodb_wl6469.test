--source include/have_innodb.inc

# Must have debug code to use SET SESSION debug
--source include/have_debug.inc

# Valgrind would complain about memory leaks when we crash on purpose.
--source include/not_valgrind.inc

# Embedded server does not support crashing
--source include/not_embedded.inc

#########################################################################
#									#
# Will test following scenarios:					#
# 1. Create/Drop of temp-table. (with and w/o explicit pk)		#
# 2. Truncate temp-table (result in table drop and recreate).		#
# 3. Alter of temp-table.						#
# 4. Import/Discard of temp-table (to check blocked action)		#
# 5. Effect of errors on temp-table					#
#########################################################################


#-------------------------------------------------------------
#
# create test-bed.
#

#-------------------------------------------------------------
#
# 1. Create/Drop of temp-table. (with and w/o explicit pk)		#
#
create temporary table t1 (i int) engine = innodb;
insert into t1 values (1), (2), (3), (4);
select * from t1;
select * from t1 where i = 4;
drop table t1;
#
# recreate table wih same name to ensure entries are removed.
create temporary table t1 (i int) engine = innodb;
insert into t1 values (1), (2), (3), (4);
select * from t1;
select * from t1 where i = 4;
drop table t1;
#
create temporary table t2 (i int) engine = innodb;
insert into t2 values (1), (2), (3), (4);
select * from t2;
select * from t2 where i = 4;
drop table t2;
#
create temporary table t1 (i int, primary key pk(i)) engine = innodb;
insert into t1 values (1), (2), (3), (4);
select * from t1;
select * from t1 where i = 4;
drop table t1;
#
select * from information_schema.innodb_sys_tables where name like 'test/t%';

#-------------------------------------------------------------
#
# 2. Truncate temp-table (result in table drop and recreate).		#
#
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc)) engine = innodb;
delimiter |;
create procedure populate_t1()
begin
	declare i int default 1;
        while (i <= 20000) DO
                insert into t1 values (i, 'a', 'b');
                set i = i + 1;
	end while;
end|
delimiter ;|
set autocommit=0;
select count(*) from t1;
CALL populate_t1();
select count(*) from t1;
select * from t1 limit 10;
set autocommit=1;
truncate table t1;
select count(*) from t1;
drop procedure if exists populate_t1;
drop table t1;
#
# recreate table wih same name to ensure entries are removed.
create temporary table t1 (i int) engine = innodb;
insert into t1 values (1), (2), (3), (4);
select * from t1;
select * from t1 where i = 4;
drop table t1;
#

#-------------------------------------------------------------
#
# 3. Alter of temp-table.
#
create temporary table t1 (t1_i int, t1_f float) engine = innodb;
insert into t1 values (1, 1.1), (2, 2.2), (3, 2.2), (4, 4.4);
#
explain select * from t1 where t1_i = 1;
alter table t1 add unique index pri_index(t1_i);
explain select * from t1 where t1_i = 1;
select * from t1 where t1_i = 1;
#
--error ER_DUP_ENTRY
alter table t1 add unique index sec_index(t1_f);
alter table t1 add index sec_index(t1_f);
explain select * from t1 where t1_f > 2.2;
select * from t1 where t1_f > 2.2;
#
alter table t1 add column (t1_c char(10));
select * from t1;
insert into t1 values (5, 5.5, 'krunal');
#
alter table t1 drop column t1_f;
show create table t1;
--error ER_BAD_FIELD_ERROR
select * from t1 where t1_f > 2.2;
#
--error ER_ALTER_OPERATION_NOT_SUPPORTED
alter table t1 add index sec_index2(t1_c), algorithm=inplace;
select * from information_schema.innodb_sys_fields where name like 't1_%';
#
drop table t1;

#-------------------------------------------------------------
#
# 4. Import/Discard of temp-table (to check blocked action)
#
create temporary table t1 (i int, f float) engine = innodb;
insert into t1 values (10, 1.1), (20, 2.2);
select * from t1;
#
--error ER_CANNOT_DISCARD_TEMPORARY_TABLE
alter table t1 discard tablespace;
--error ER_CANNOT_DISCARD_TEMPORARY_TABLE
alter table t1 import tablespace;
drop table t1;

#------------------------------------------------------------
#
# 5. Effect of errors on temp-table (count(*) TC)
#
call mtr.add_suppression("No space left on device");
call mtr.add_suppression("table.+ full");
call mtr.add_suppression("Cannot create file");
#
set session debug="+d,ib_create_table_fail_disk_full";
--error ER_RECORD_FILE_FULL
create temporary table t1
	(a int, b int, primary key(a), index(b)) engine = innodb;
--error ER_NO_SUCH_TABLE
insert into t1 values (10, 11);
set session debug="-d,ib_create_table_fail_disk_full";
create temporary table t1
	(a int, b int, primary key(a), index(b)) engine = innodb;
insert into t1 values (10, 11);
drop table t1;
#
set session debug="+d,ib_create_table_fail_at_create_index";
--error ER_INDEX_COLUMN_TOO_LONG
create temporary table t1
	(a int, b int, primary key(a), index(b)) engine = innodb;
--error ER_NO_SUCH_TABLE
insert into t1 values (10, 11);
set session debug="-d,ib_create_table_fail_at_create_index";
create temporary table t1
	(a int, b int, primary key(a), index(b)) engine = innodb;
insert into t1 values (10, 11);
drop table t1;


#-------------------------------------------------------------
#
# remove test-bed.
#


