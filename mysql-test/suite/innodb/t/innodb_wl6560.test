--source include/have_innodb.inc

#
# Will test following scenarios:
# 1. creation of shared temp-tablespace.
# 2. ddl + dml operation involving temp-tablespace.
#    insert/delete/update/select
#    create/drop/alter/truncate/import-discard (though blocked).
# 3. ddl + dml operation on compressed table.
#    (table doesn't reside in shared temp-tablespace).
# 4. Test bulk-loading that result in auto-extension of temp-tablespace.
# 5. re-creation of temp-tablespace on re-start.
#    also to ensure non-existence of existing temp-table.
# 6. try to add crash point to ensure tablespace is recovered
#    correctly after hitting crash point.
#    (though there is no recovery involved).
# 7. restart server in innodb-read-only mode. this will also
#    block creation of temp-tables.

#-----------------------------------------------------------------------------
#
# create test-bed
#
set @global_innodb_file_per_table_orig = @@global.innodb_file_per_table;
set @global_innodb_file_format_orig= @@global.innodb_file_format;
set global innodb_file_per_table = off;
let $MYSQL_DATA_DIR = `select @@datadir`;
let $MYSQL_TMP_DIR = `select @@tmpdir`;

#-----------------------------------------------------------------------------
#
# 1. creation of shared temp-tablespace.
#
--echo # files in MYSQL_DATA_DIR
--list_files $MYSQL_DATA_DIR/ ib*tmp*


#-----------------------------------------------------------------------------
#
# 2. ddl + dml operation involving temp-tablespace.
#    insert/delete/update/select
#    create/drop/alter/truncate/import-discard (though blocked).
#
--disable_warnings
drop table if exists t1;
--enable_warnings
select @@global.innodb_file_per_table;
create temporary table t1 (i int, f float, c char(100)) engine=innodb;
#
--source suite/innodb/include/innodb_temp_table_dml.inc
#
# alter table
--error ER_TABLE_IN_SYSTEM_TABLESPACE
alter table t1 import tablespace;
#
# drop table
drop table t1;

#-----------------------------------------------------------------------------
#
# 3. ddl + dml operation on compressed table.
#    (table doesn't reside in shared temp-tablespace).
#
--echo #files in MYSQL_TMP_DIR
--list_files $MYSQL_TMP_DIR/ *.ibd
set global innodb_file_per_table = on;
set global innodb_file_format = 'Barracuda';
select @@global.innodb_file_per_table;
create temporary table t1 (i int, f float, c char(100))
engine=innodb key_block_size=4;
show create table t1;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
#
--source suite/innodb/include/innodb_temp_table_dml.inc
#
# alter table
alter table t1 discard tablespace;
#--error ER_NO_SUCH_TABLE
#alter table t1 import tablespace;
#
# drop table
drop table t1;
set global innodb_file_per_table = off;
set global innodb_file_format = @global_innodb_file_format_orig;


#-----------------------------------------------------------------------------
#
# 4. Test bulk-loading that result in auto-extension of temp-tablespace.
#
create temporary table t1 (keyc int, c1 char(100), c2 char(100),
primary key(keyc)) engine=innodb;
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 20000) DO
		insert into t1 values (i, 'a', 'b');
                SET i = i + 1;
        END WHILE;
END|
delimiter ;|
set autocommit=0;
select count(*) from t1;
CALL populate_t1();
select count(*) from t1;
select * from t1 limit 10;
set autocommit=1;
truncate table t1;
select count(*) from t1;
#
drop procedure populate_t1;
drop table t1;



#-----------------------------------------------------------------------------
#
# remove test-bed
#
SET global innodb_file_per_table = @global_innodb_file_per_table_orig;


