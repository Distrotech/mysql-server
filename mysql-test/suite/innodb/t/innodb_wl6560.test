#
# WL#6560: InnoDB: separate tablespace for innodb-temp-tables.
#

--source include/have_innodb.inc
--source include/have_debug.inc
# Valgrind would complain about memory leaks when we crash on purpose.
--source include/not_valgrind.inc
# Embedded server does not support crashing
--source include/not_embedded.inc
# Avoid CrashReporter popup on Mac
--source include/not_crashrep.inc

call mtr.add_suppression("Please add another temp-data file or use 'autoextend' for the last data file");
call mtr.add_suppression("The table 't1' is full");

################################################################################
#
# Will test following scenarios:
# 1.  creation of shared temp-tablespace.
# 2.  ddl + dml operation involving temp-tablespace.
#     insert/delete/update/select
#     create/drop/alter/truncate/import-discard (though blocked).
# 3.  ddl + dml operation on compressed table.
#     (table doesn't reside in shared temp-tablespace).
# 4.  Test bulk-loading that result in auto-extension of temp-tablespace.
# 5.  re-creation of temp-tablespace on re-start.
#     also to ensure non-existence of existing temp-table.
# 6.  hit a crash point during tablespace creation to ensure temp-table
#     is recovered correctly.
# 7.  restart server in innodb-read-only mode. this will also
#     block creation of temp-tables.
# 8.  try starting server with shared and temp-tablespace filename same.
# 9.  try re-starting server with param so that temp-tablespace can't be
#     expanded and insert enough data to make it full.
# 10. tests for different row format types and key block sizes for
#     compressed tables.
################################################################################

#-----------------------------------------------------------------------------
#
# create test-bed
#
let $per_table = `select @@innodb_file_per_table`;
let $format = `select @@innodb_file_format`;

set global innodb_file_per_table = off;
let $MYSQL_DATA_DIR = `select @@datadir`;
let $MYSQL_TMP_DIR = `select @@tmpdir`;
let SEARCH_FILE = $MYSQLTEST_VARDIR/log/my_restart.err;
let $args = --loose-console > $SEARCH_FILE 2>&1;
let crash = $args --innodb-force-recovery-crash;
let readonly = $args --innodb_read_only;
let nameconflicts = $args --innodb_data_file_path="ibdata1:12M:autoextend" --innodb_temp_data_file_path="ibdata1:12M:autoextend";

#-----------------------------------------------------------------------------
#
# 1. creation of shared temp-tablespace.
#
--echo # files in MYSQL_DATA_DIR
--list_files $MYSQL_DATA_DIR/ ib*tmp*


#-----------------------------------------------------------------------------
#
# 2. ddl + dml operation involving temp-tablespace.
#    insert/delete/update/select
#    create/drop/alter/truncate/import-discard (though blocked).
#
--disable_warnings
drop table if exists t1;
--enable_warnings
select @@global.innodb_file_per_table;
create temporary table t1 (i int, f float, c char(100)) engine=innodb;
#
--source suite/innodb/include/innodb_temp_table_dml.inc
#
# alter table
--error ER_CANNOT_DISCARD_TEMPORARY_TABLE
alter table t1 discard tablespace;
--error ER_CANNOT_DISCARD_TEMPORARY_TABLE
alter table t1 import tablespace;
#
# drop table
drop table t1;

#-----------------------------------------------------------------------------
#
# 3. ddl + dml operation on compressed table.
#    (table doesn't reside in shared temp-tablespace).
#
--echo #files in MYSQL_TMP_DIR
--list_files $MYSQL_TMP_DIR/ *.ibd
set global innodb_file_per_table = 1;
set global innodb_file_format = 'Barracuda';
select @@global.innodb_file_per_table;
create temporary table t1
	(i int, f float, c char(100)) engine = innodb key_block_size = 4;
show create table t1;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
#
--source suite/innodb/include/innodb_temp_table_dml.inc
#
# alter table
--error ER_CANNOT_DISCARD_TEMPORARY_TABLE
alter table t1 discard tablespace;
#
# drop table
drop table t1;
set global innodb_file_per_table = off;
eval set global innodb_file_format = $format;

#-----------------------------------------------------------------------------
#
# 4. Test bulk-loading that result in auto-extension of temp-tablespace.
#
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc)) engine = innodb;
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 20000) DO
		insert into t1 values (i, 'a', 'b');
                SET i = i + 1;
        END WHILE;
END|
delimiter ;|
set autocommit=0;
select count(*) from t1;
call populate_t1();
select count(*) from t1;
select * from t1 limit 10;
set autocommit=1;
truncate table t1;
select count(*) from t1;
#
drop procedure populate_t1;
drop table t1;

#-----------------------------------------------------------------------------
#
# 5. re-creation of temp-tablespace on re-start.
#    also to ensure non-existence of existing temp-table.
#
create temporary table t1 (keyc int, c1 char(100), c2 char(100)) engine = innodb;
insert into t1 values (1, 'c', 'b');
select * from t1;
--source include/restart_mysqld.inc
--echo # files in MYSQL_DATA_DIR
--list_files $MYSQL_DATA_DIR/ ib*tmp*
use test;
--error ER_NO_SUCH_TABLE
select * from t1;


#-----------------------------------------------------------------------------
#
# 6. hit a crash point during tablespace creation to ensure temp-table
#    is recovered correctly.
#
--echo "testing creation of tablepsace by enabling error path"
--source include/shutdown_mysqld.inc
--echo --innodb-force-recovery-crash=100
--error 3
--exec $MYSQLD_CMD $crash=100
let SEARCH_PATTERN = InnoDB: Creating shared tablespace for temporary tables;
--source include/search_pattern_in_file.inc
--remove_file $SEARCH_FILE
#
--echo "restarting server in normal mode"
--source include/start_mysqld.inc
--echo # files in MYSQL_DATA_DIR
--list_files $MYSQL_DATA_DIR/ ib*tmp*
use test;
create temporary table t1 (keyc int, c1 char(100), c2 char(100)) engine=innodb;
insert into t1 values (1, 'c', 'b');
select * from t1;

#-----------------------------------------------------------------------------
#
# 7. restart server in innodb-read-only mode. this will also
#    block creation of temp-tables.
#
#
--echo "testing temp-table creation in --innodb_read_only mode"
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server 10
--source include/wait_until_disconnected.inc
# Do something while server is down
--enable_reconnect
# Write file to make mysql-test-run.pl start up the server again
--exec echo "restart: --innodb-read-only " > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect
#
use test;
show tables;
--error ER_OPEN_AS_READONLY
create temporary table t1 (keyc int, c1 char(100), c2 char(100)) engine = innodb;

#-----------------------------------------------------------------------------
#
# 8. try starting server with shared and temp-tablespace filename same.
#
--source include/shutdown_mysqld.inc
--echo "testing system and temp tablespace name conflict"
--error 1
--exec $MYSQLD_CMD $nameconflicts
let SEARCH_PATTERN = system shared and system temp tablespace file name seems to be same;
--source ./include/search_pattern_in_file.inc
--remove_file $SEARCH_FILE
--echo "restarting server in normal mode"
--source include/start_mysqld.inc
#
use test;
show tables;
create temporary table t1 (keyc int, c1 char(100), c2 char(100)) engine = innodb;
drop table t1;

#-----------------------------------------------------------------------------
#
# 9. try re-starting server with param so that temp-tablespace can't be expanded
#    and insert enough data to make it full.
#
--echo "test condition of full-temp-tablespace"
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--shutdown_server 10
--source include/wait_until_disconnected.inc
# Do something while server is down
--enable_reconnect
# Write file to make mysql-test-run.pl start up the server again
--exec echo "restart: --innodb_temp_data_file_path=ibtmp1:12M" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect
#
use test;
create temporary table t1
	(keyc int, c1 char(100), c2 char(100),
	 primary key(keyc)) engine = innodb;
delimiter |;
CREATE PROCEDURE populate_t1()
BEGIN
        DECLARE i INT DEFAULT 1;
        while (i <= 20000) DO
		insert into t1 values (i, 'a', 'b');
                SET i = i + 1;
        END WHILE;
END|
delimiter ;|
set autocommit=0;
select count(*) from t1;
--error ER_RECORD_FILE_FULL
call populate_t1();
#
drop procedure populate_t1;
drop table t1;

#-----------------------------------------------------------------------------
#
# 10. tests for different row format types and key block sizes for
#     compressed tables.
#
--disable_warnings
use test;
set global innodb_file_per_table = 0;
set global innodb_file_format = 'Antelope';
create temporary table t (
	i int)
	engine = innodb row_format = compressed;
--replace_regex /[0-9]+/NUMBER/
show warnings;
drop table t;
#
create temporary table t (
	i int)
	engine = innodb row_format = compressed key_block_size = 8;
--replace_regex /[0-9]+/NUMBER/
show warnings;
#
drop table t;
set global innodb_file_per_table = 1;
create temporary table t (
	i int)
	engine = innodb row_format = compressed key_block_size = 8;
--replace_regex /[0-9]+/NUMBER/
show warnings;
#
drop table t;
set global innodb_file_format = 'Barracuda';
create temporary table t (
	i int)
	engine = innodb row_format = compressed key_block_size = 8;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
#
drop table t;
create temporary table t (
	i int)
	engine = innodb row_format = compressed;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
drop table t;
#
create temporary table t (
	i int)
	engine = innodb row_format = dynamic;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
drop table t;
#
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
create temporary table t (
	i int)
	engine = innodb row_format = dynamic key_block_size = 4;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
drop table t;
#
create temporary table t (
	i int)
	engine = innodb row_format = compact;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
drop table t;
#
create temporary table t (
	i int)
	engine = innodb key_block_size = 4;
--replace_regex /[0-9]+/NUMBER/
show warnings;
--echo #files in MYSQL_TMP_DIR
--replace_regex /#sql[0-9a-f_]*/#sql<temporary>/
--list_files $MYSQL_TMP_DIR/ *.ibd
drop table t;
#

#-----------------------------------------------------------------------------
#
# remove test-bed
#
eval set global innodb_file_format = $format;
eval set global innodb_file_per_table = $per_table;


