DROP TABLE IF EXISTS t1,t2,t3,t4;
set @save_ndb_join_pushdown = @@session.ndb_join_pushdown;
set ndb_join_pushdown = true;
CREATE TABLE t1 (
a int NOT NULL,
b int NOT NULL,
c int NOT NULL,
d int NOT NULL,
PRIMARY KEY (`a`,`b`)
) ENGINE=ndbcluster;
insert into t1 values
(1,1,1,1), (2,2,2,2), (3,3,3,3), (4,4,4,4),
(1,2,5,1), (1,3,1,2), (1,4,2,3),
(2,1,3,4), (2,3,4,5), (2,4,5,1),
(3,1,1,2), (3,2,2,3), (3,4,3,4),
(4,1,4,5), (4,2,5,1), (4,3,1,2);
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2
1	4	2	3	4	2	5	1
2	1	3	4	1	3	1	2
2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4
3	1	1	2	1	1	1	1
3	2	2	3	2	2	2	2
3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2
4	1	4	5	1	4	2	3
4	3	1	2	3	1	1	2
4	4	4	4	4	4	4	4
explain
select *
from t1
left join t1 as t2 on t2.a = t1.b and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.b and t2.b = t1.c;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	NULL	NULL	NULL	NULL
1	3	1	2	3	1	1	2
1	4	2	3	4	2	5	1
2	1	3	4	1	3	1	2
2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4
2	4	5	1	NULL	NULL	NULL	NULL
3	1	1	2	1	1	1	1
3	2	2	3	2	2	2	2
3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2
4	1	4	5	1	4	2	3
4	2	5	1	NULL	NULL	NULL	NULL
4	3	1	2	3	1	1	2
4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4	3	4	3	4
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	3	1	2	3	1	1	2	3	1	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
left join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.a,test.t2.b	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
left join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4	3	4	3	4
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	3	1	2	3	1	1	2	3	1	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
left join t1 as t2 on t2.a = t1.b and t2.b = t1.c
left join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.a,test.t2.b	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.b and t2.b = t1.c
left join t1 as t3 on t3.a = t2.a and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	2	5	1	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4	3	4	3	4
2	4	5	1	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	2	5	1	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
4	3	1	2	3	1	1	2	3	1	1	2
4	4	4	4	4	4	4	4	4	4	4	4
set ndb_join_pushdown=true;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
a	b	c	d	a	b	c	d
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
a	b	c	d	a	b	c	d
2	3	4	5	NULL	NULL	NULL	NULL
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3
order by t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1; Using where; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3
order by t1.c;
a	b	c	d	a	b	c	d
2	3	4	5	NULL	NULL	NULL	NULL
set ndb_join_pushdown=false;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	NULL	NULL	NULL	NULL	NULL	NULL	NULL	Impossible WHERE noticed after reading const tables
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
a	b	c	d	a	b	c	d
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	const	PRIMARY	PRIMARY	8	const,const	0	unique row not found
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 2 and t1.b = 3;
a	b	c	d	a	b	c	d
2	3	4	5	NULL	NULL	NULL	NULL
set ndb_join_pushdown=true;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
set ndb_join_pushdown=false;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	const	PRIMARY	PRIMARY	8	const,const	1	
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	const	PRIMARY	PRIMARY	8	const,const	1	
select *
from t1
left join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
set ndb_join_pushdown=true;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t1.c and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t2.b	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t1.c and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	2	5	1	1	2	5	1
1	1	1	1	1	3	1	2	1	3	1	2
1	1	1	1	1	4	2	3	1	4	2	3
1	3	1	2	1	1	1	1	1	1	1	1
1	3	1	2	1	2	5	1	1	2	5	1
1	3	1	2	1	3	1	2	1	3	1	2
1	3	1	2	1	4	2	3	1	4	2	3
1	4	2	3	2	1	3	4	2	1	3	4
1	4	2	3	2	2	2	2	2	2	2	2
1	4	2	3	2	3	4	5	2	3	4	5
1	4	2	3	2	4	5	1	2	4	5	1
2	1	3	4	3	1	1	2	3	1	1	2
2	1	3	4	3	2	2	3	3	2	2	3
2	1	3	4	3	3	3	3	3	3	3	3
2	1	3	4	3	4	3	4	3	4	3	4
2	2	2	2	2	1	3	4	2	1	3	4
2	2	2	2	2	2	2	2	2	2	2	2
2	2	2	2	2	3	4	5	2	3	4	5
2	2	2	2	2	4	5	1	2	4	5	1
2	3	4	5	4	1	4	5	4	1	4	5
2	3	4	5	4	2	5	1	4	2	5	1
2	3	4	5	4	3	1	2	4	3	1	2
2	3	4	5	4	4	4	4	4	4	4	4
3	1	1	2	1	1	1	1	1	1	1	1
3	1	1	2	1	2	5	1	1	2	5	1
3	1	1	2	1	3	1	2	1	3	1	2
3	1	1	2	1	4	2	3	1	4	2	3
3	2	2	3	2	1	3	4	2	1	3	4
3	2	2	3	2	2	2	2	2	2	2	2
3	2	2	3	2	3	4	5	2	3	4	5
3	2	2	3	2	4	5	1	2	4	5	1
3	3	3	3	3	1	1	2	3	1	1	2
3	3	3	3	3	2	2	3	3	2	2	3
3	3	3	3	3	3	3	3	3	3	3	3
3	3	3	3	3	4	3	4	3	4	3	4
3	4	3	4	3	1	1	2	3	1	1	2
3	4	3	4	3	2	2	3	3	2	2	3
3	4	3	4	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4
4	1	4	5	4	1	4	5	4	1	4	5
4	1	4	5	4	2	5	1	4	2	5	1
4	1	4	5	4	3	1	2	4	3	1	2
4	1	4	5	4	4	4	4	4	4	4	4
4	3	1	2	1	1	1	1	1	1	1	1
4	3	1	2	1	2	5	1	1	2	5	1
4	3	1	2	1	3	1	2	1	3	1	2
4	3	1	2	1	4	2	3	1	4	2	3
4	4	4	4	4	1	4	5	4	1	4	5
4	4	4	4	4	2	5	1	4	2	5	1
4	4	4	4	4	3	1	2	4	3	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select STRAIGHT_JOIN *
FROM (t1 as X CROSS JOIN t1 as Y)
JOIN t1 as Z ON Z.a=X.a and Z.b=Y.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	PRIMARY	NULL	NULL	NULL	16	
1	SIMPLE	Y	ALL	NULL	NULL	NULL	NULL	16	Parent of 2 pushed join@1
1	SIMPLE	Z	eq_ref	PRIMARY	PRIMARY	8	test.X.a,test.Y.b	1	Child of pushed join@1
select STRAIGHT_JOIN *
FROM (t1 as X CROSS JOIN t1 as Y)
JOIN t1 as Z ON Z.a=X.a and Z.b=Y.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	2	5	1	1	2	5	1
1	1	1	1	1	3	1	2	1	3	1	2
1	1	1	1	1	4	2	3	1	4	2	3
1	1	1	1	2	1	3	4	1	1	1	1
1	1	1	1	2	2	2	2	1	2	5	1
1	1	1	1	2	3	4	5	1	3	1	2
1	1	1	1	2	4	5	1	1	4	2	3
1	1	1	1	3	1	1	2	1	1	1	1
1	1	1	1	3	2	2	3	1	2	5	1
1	1	1	1	3	3	3	3	1	3	1	2
1	1	1	1	3	4	3	4	1	4	2	3
1	1	1	1	4	1	4	5	1	1	1	1
1	1	1	1	4	2	5	1	1	2	5	1
1	1	1	1	4	3	1	2	1	3	1	2
1	1	1	1	4	4	4	4	1	4	2	3
1	2	5	1	1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1	1	2	5	1
1	2	5	1	1	3	1	2	1	3	1	2
1	2	5	1	1	4	2	3	1	4	2	3
1	2	5	1	2	1	3	4	1	1	1	1
1	2	5	1	2	2	2	2	1	2	5	1
1	2	5	1	2	3	4	5	1	3	1	2
1	2	5	1	2	4	5	1	1	4	2	3
1	2	5	1	3	1	1	2	1	1	1	1
1	2	5	1	3	2	2	3	1	2	5	1
1	2	5	1	3	3	3	3	1	3	1	2
1	2	5	1	3	4	3	4	1	4	2	3
1	2	5	1	4	1	4	5	1	1	1	1
1	2	5	1	4	2	5	1	1	2	5	1
1	2	5	1	4	3	1	2	1	3	1	2
1	2	5	1	4	4	4	4	1	4	2	3
1	3	1	2	1	1	1	1	1	1	1	1
1	3	1	2	1	2	5	1	1	2	5	1
1	3	1	2	1	3	1	2	1	3	1	2
1	3	1	2	1	4	2	3	1	4	2	3
1	3	1	2	2	1	3	4	1	1	1	1
1	3	1	2	2	2	2	2	1	2	5	1
1	3	1	2	2	3	4	5	1	3	1	2
1	3	1	2	2	4	5	1	1	4	2	3
1	3	1	2	3	1	1	2	1	1	1	1
1	3	1	2	3	2	2	3	1	2	5	1
1	3	1	2	3	3	3	3	1	3	1	2
1	3	1	2	3	4	3	4	1	4	2	3
1	3	1	2	4	1	4	5	1	1	1	1
1	3	1	2	4	2	5	1	1	2	5	1
1	3	1	2	4	3	1	2	1	3	1	2
1	3	1	2	4	4	4	4	1	4	2	3
1	4	2	3	1	1	1	1	1	1	1	1
1	4	2	3	1	2	5	1	1	2	5	1
1	4	2	3	1	3	1	2	1	3	1	2
1	4	2	3	1	4	2	3	1	4	2	3
1	4	2	3	2	1	3	4	1	1	1	1
1	4	2	3	2	2	2	2	1	2	5	1
1	4	2	3	2	3	4	5	1	3	1	2
1	4	2	3	2	4	5	1	1	4	2	3
1	4	2	3	3	1	1	2	1	1	1	1
1	4	2	3	3	2	2	3	1	2	5	1
1	4	2	3	3	3	3	3	1	3	1	2
1	4	2	3	3	4	3	4	1	4	2	3
1	4	2	3	4	1	4	5	1	1	1	1
1	4	2	3	4	2	5	1	1	2	5	1
1	4	2	3	4	3	1	2	1	3	1	2
1	4	2	3	4	4	4	4	1	4	2	3
2	1	3	4	1	1	1	1	2	1	3	4
2	1	3	4	1	2	5	1	2	2	2	2
2	1	3	4	1	3	1	2	2	3	4	5
2	1	3	4	1	4	2	3	2	4	5	1
2	1	3	4	2	1	3	4	2	1	3	4
2	1	3	4	2	2	2	2	2	2	2	2
2	1	3	4	2	3	4	5	2	3	4	5
2	1	3	4	2	4	5	1	2	4	5	1
2	1	3	4	3	1	1	2	2	1	3	4
2	1	3	4	3	2	2	3	2	2	2	2
2	1	3	4	3	3	3	3	2	3	4	5
2	1	3	4	3	4	3	4	2	4	5	1
2	1	3	4	4	1	4	5	2	1	3	4
2	1	3	4	4	2	5	1	2	2	2	2
2	1	3	4	4	3	1	2	2	3	4	5
2	1	3	4	4	4	4	4	2	4	5	1
2	2	2	2	1	1	1	1	2	1	3	4
2	2	2	2	1	2	5	1	2	2	2	2
2	2	2	2	1	3	1	2	2	3	4	5
2	2	2	2	1	4	2	3	2	4	5	1
2	2	2	2	2	1	3	4	2	1	3	4
2	2	2	2	2	2	2	2	2	2	2	2
2	2	2	2	2	3	4	5	2	3	4	5
2	2	2	2	2	4	5	1	2	4	5	1
2	2	2	2	3	1	1	2	2	1	3	4
2	2	2	2	3	2	2	3	2	2	2	2
2	2	2	2	3	3	3	3	2	3	4	5
2	2	2	2	3	4	3	4	2	4	5	1
2	2	2	2	4	1	4	5	2	1	3	4
2	2	2	2	4	2	5	1	2	2	2	2
2	2	2	2	4	3	1	2	2	3	4	5
2	2	2	2	4	4	4	4	2	4	5	1
2	3	4	5	1	1	1	1	2	1	3	4
2	3	4	5	1	2	5	1	2	2	2	2
2	3	4	5	1	3	1	2	2	3	4	5
2	3	4	5	1	4	2	3	2	4	5	1
2	3	4	5	2	1	3	4	2	1	3	4
2	3	4	5	2	2	2	2	2	2	2	2
2	3	4	5	2	3	4	5	2	3	4	5
2	3	4	5	2	4	5	1	2	4	5	1
2	3	4	5	3	1	1	2	2	1	3	4
2	3	4	5	3	2	2	3	2	2	2	2
2	3	4	5	3	3	3	3	2	3	4	5
2	3	4	5	3	4	3	4	2	4	5	1
2	3	4	5	4	1	4	5	2	1	3	4
2	3	4	5	4	2	5	1	2	2	2	2
2	3	4	5	4	3	1	2	2	3	4	5
2	3	4	5	4	4	4	4	2	4	5	1
2	4	5	1	1	1	1	1	2	1	3	4
2	4	5	1	1	2	5	1	2	2	2	2
2	4	5	1	1	3	1	2	2	3	4	5
2	4	5	1	1	4	2	3	2	4	5	1
2	4	5	1	2	1	3	4	2	1	3	4
2	4	5	1	2	2	2	2	2	2	2	2
2	4	5	1	2	3	4	5	2	3	4	5
2	4	5	1	2	4	5	1	2	4	5	1
2	4	5	1	3	1	1	2	2	1	3	4
2	4	5	1	3	2	2	3	2	2	2	2
2	4	5	1	3	3	3	3	2	3	4	5
2	4	5	1	3	4	3	4	2	4	5	1
2	4	5	1	4	1	4	5	2	1	3	4
2	4	5	1	4	2	5	1	2	2	2	2
2	4	5	1	4	3	1	2	2	3	4	5
2	4	5	1	4	4	4	4	2	4	5	1
3	1	1	2	1	1	1	1	3	1	1	2
3	1	1	2	1	2	5	1	3	2	2	3
3	1	1	2	1	3	1	2	3	3	3	3
3	1	1	2	1	4	2	3	3	4	3	4
3	1	1	2	2	1	3	4	3	1	1	2
3	1	1	2	2	2	2	2	3	2	2	3
3	1	1	2	2	3	4	5	3	3	3	3
3	1	1	2	2	4	5	1	3	4	3	4
3	1	1	2	3	1	1	2	3	1	1	2
3	1	1	2	3	2	2	3	3	2	2	3
3	1	1	2	3	3	3	3	3	3	3	3
3	1	1	2	3	4	3	4	3	4	3	4
3	1	1	2	4	1	4	5	3	1	1	2
3	1	1	2	4	2	5	1	3	2	2	3
3	1	1	2	4	3	1	2	3	3	3	3
3	1	1	2	4	4	4	4	3	4	3	4
3	2	2	3	1	1	1	1	3	1	1	2
3	2	2	3	1	2	5	1	3	2	2	3
3	2	2	3	1	3	1	2	3	3	3	3
3	2	2	3	1	4	2	3	3	4	3	4
3	2	2	3	2	1	3	4	3	1	1	2
3	2	2	3	2	2	2	2	3	2	2	3
3	2	2	3	2	3	4	5	3	3	3	3
3	2	2	3	2	4	5	1	3	4	3	4
3	2	2	3	3	1	1	2	3	1	1	2
3	2	2	3	3	2	2	3	3	2	2	3
3	2	2	3	3	3	3	3	3	3	3	3
3	2	2	3	3	4	3	4	3	4	3	4
3	2	2	3	4	1	4	5	3	1	1	2
3	2	2	3	4	2	5	1	3	2	2	3
3	2	2	3	4	3	1	2	3	3	3	3
3	2	2	3	4	4	4	4	3	4	3	4
3	3	3	3	1	1	1	1	3	1	1	2
3	3	3	3	1	2	5	1	3	2	2	3
3	3	3	3	1	3	1	2	3	3	3	3
3	3	3	3	1	4	2	3	3	4	3	4
3	3	3	3	2	1	3	4	3	1	1	2
3	3	3	3	2	2	2	2	3	2	2	3
3	3	3	3	2	3	4	5	3	3	3	3
3	3	3	3	2	4	5	1	3	4	3	4
3	3	3	3	3	1	1	2	3	1	1	2
3	3	3	3	3	2	2	3	3	2	2	3
3	3	3	3	3	3	3	3	3	3	3	3
3	3	3	3	3	4	3	4	3	4	3	4
3	3	3	3	4	1	4	5	3	1	1	2
3	3	3	3	4	2	5	1	3	2	2	3
3	3	3	3	4	3	1	2	3	3	3	3
3	3	3	3	4	4	4	4	3	4	3	4
3	4	3	4	1	1	1	1	3	1	1	2
3	4	3	4	1	2	5	1	3	2	2	3
3	4	3	4	1	3	1	2	3	3	3	3
3	4	3	4	1	4	2	3	3	4	3	4
3	4	3	4	2	1	3	4	3	1	1	2
3	4	3	4	2	2	2	2	3	2	2	3
3	4	3	4	2	3	4	5	3	3	3	3
3	4	3	4	2	4	5	1	3	4	3	4
3	4	3	4	3	1	1	2	3	1	1	2
3	4	3	4	3	2	2	3	3	2	2	3
3	4	3	4	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4
3	4	3	4	4	1	4	5	3	1	1	2
3	4	3	4	4	2	5	1	3	2	2	3
3	4	3	4	4	3	1	2	3	3	3	3
3	4	3	4	4	4	4	4	3	4	3	4
4	1	4	5	1	1	1	1	4	1	4	5
4	1	4	5	1	2	5	1	4	2	5	1
4	1	4	5	1	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	4	4	4	4
4	1	4	5	2	1	3	4	4	1	4	5
4	1	4	5	2	2	2	2	4	2	5	1
4	1	4	5	2	3	4	5	4	3	1	2
4	1	4	5	2	4	5	1	4	4	4	4
4	1	4	5	3	1	1	2	4	1	4	5
4	1	4	5	3	2	2	3	4	2	5	1
4	1	4	5	3	3	3	3	4	3	1	2
4	1	4	5	3	4	3	4	4	4	4	4
4	1	4	5	4	1	4	5	4	1	4	5
4	1	4	5	4	2	5	1	4	2	5	1
4	1	4	5	4	3	1	2	4	3	1	2
4	1	4	5	4	4	4	4	4	4	4	4
4	2	5	1	1	1	1	1	4	1	4	5
4	2	5	1	1	2	5	1	4	2	5	1
4	2	5	1	1	3	1	2	4	3	1	2
4	2	5	1	1	4	2	3	4	4	4	4
4	2	5	1	2	1	3	4	4	1	4	5
4	2	5	1	2	2	2	2	4	2	5	1
4	2	5	1	2	3	4	5	4	3	1	2
4	2	5	1	2	4	5	1	4	4	4	4
4	2	5	1	3	1	1	2	4	1	4	5
4	2	5	1	3	2	2	3	4	2	5	1
4	2	5	1	3	3	3	3	4	3	1	2
4	2	5	1	3	4	3	4	4	4	4	4
4	2	5	1	4	1	4	5	4	1	4	5
4	2	5	1	4	2	5	1	4	2	5	1
4	2	5	1	4	3	1	2	4	3	1	2
4	2	5	1	4	4	4	4	4	4	4	4
4	3	1	2	1	1	1	1	4	1	4	5
4	3	1	2	1	2	5	1	4	2	5	1
4	3	1	2	1	3	1	2	4	3	1	2
4	3	1	2	1	4	2	3	4	4	4	4
4	3	1	2	2	1	3	4	4	1	4	5
4	3	1	2	2	2	2	2	4	2	5	1
4	3	1	2	2	3	4	5	4	3	1	2
4	3	1	2	2	4	5	1	4	4	4	4
4	3	1	2	3	1	1	2	4	1	4	5
4	3	1	2	3	2	2	3	4	2	5	1
4	3	1	2	3	3	3	3	4	3	1	2
4	3	1	2	3	4	3	4	4	4	4	4
4	3	1	2	4	1	4	5	4	1	4	5
4	3	1	2	4	2	5	1	4	2	5	1
4	3	1	2	4	3	1	2	4	3	1	2
4	3	1	2	4	4	4	4	4	4	4	4
4	4	4	4	1	1	1	1	4	1	4	5
4	4	4	4	1	2	5	1	4	2	5	1
4	4	4	4	1	3	1	2	4	3	1	2
4	4	4	4	1	4	2	3	4	4	4	4
4	4	4	4	2	1	3	4	4	1	4	5
4	4	4	4	2	2	2	2	4	2	5	1
4	4	4	4	2	3	4	5	4	3	1	2
4	4	4	4	2	4	5	1	4	4	4	4
4	4	4	4	3	1	1	2	4	1	4	5
4	4	4	4	3	2	2	3	4	2	5	1
4	4	4	4	3	3	3	3	4	3	1	2
4	4	4	4	3	4	3	4	4	4	4	4
4	4	4	4	4	1	4	5	4	1	4	5
4	4	4	4	4	2	5	1	4	2	5	1
4	4	4	4	4	3	1	2	4	3	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0 and t2.b = t1.c
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	func,test.t1.c	1	Using where
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0 and t2.b = t1.c
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4	3	4	3	4
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	3	1	2	3	1	1	2	3	1	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0 and t2.b = t1.c
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b
where t1.a=1 and t1.d=1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	func,test.t1.c	1	Using where
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0 and t2.b = t1.c
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b
where t1.a=1 and t1.d=1;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
explain
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	func	1	Parent of 2 pushed join@1; Using where
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1
select *
from t1
straight_join t1 as t2 on t2.a = t1.b+0
straight_join t1 as t3 on t3.a = t1.b and t3.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	2	5	1	1	2	5	1
1	1	1	1	1	3	1	2	1	3	1	2
1	1	1	1	1	4	2	3	1	4	2	3
1	2	5	1	2	1	3	4	2	1	3	4
1	2	5	1	2	2	2	2	2	2	2	2
1	2	5	1	2	3	4	5	2	3	4	5
1	2	5	1	2	4	5	1	2	4	5	1
1	3	1	2	3	1	1	2	3	1	1	2
1	3	1	2	3	2	2	3	3	2	2	3
1	3	1	2	3	3	3	3	3	3	3	3
1	3	1	2	3	4	3	4	3	4	3	4
1	4	2	3	4	1	4	5	4	1	4	5
1	4	2	3	4	2	5	1	4	2	5	1
1	4	2	3	4	3	1	2	4	3	1	2
1	4	2	3	4	4	4	4	4	4	4	4
2	1	3	4	1	1	1	1	1	1	1	1
2	1	3	4	1	2	5	1	1	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	1	3	4	1	4	2	3	1	4	2	3
2	2	2	2	2	1	3	4	2	1	3	4
2	2	2	2	2	2	2	2	2	2	2	2
2	2	2	2	2	3	4	5	2	3	4	5
2	2	2	2	2	4	5	1	2	4	5	1
2	3	4	5	3	1	1	2	3	1	1	2
2	3	4	5	3	2	2	3	3	2	2	3
2	3	4	5	3	3	3	3	3	3	3	3
2	3	4	5	3	4	3	4	3	4	3	4
2	4	5	1	4	1	4	5	4	1	4	5
2	4	5	1	4	2	5	1	4	2	5	1
2	4	5	1	4	3	1	2	4	3	1	2
2	4	5	1	4	4	4	4	4	4	4	4
3	1	1	2	1	1	1	1	1	1	1	1
3	1	1	2	1	2	5	1	1	2	5	1
3	1	1	2	1	3	1	2	1	3	1	2
3	1	1	2	1	4	2	3	1	4	2	3
3	2	2	3	2	1	3	4	2	1	3	4
3	2	2	3	2	2	2	2	2	2	2	2
3	2	2	3	2	3	4	5	2	3	4	5
3	2	2	3	2	4	5	1	2	4	5	1
3	3	3	3	3	1	1	2	3	1	1	2
3	3	3	3	3	2	2	3	3	2	2	3
3	3	3	3	3	3	3	3	3	3	3	3
3	3	3	3	3	4	3	4	3	4	3	4
3	4	3	4	4	1	4	5	4	1	4	5
3	4	3	4	4	2	5	1	4	2	5	1
3	4	3	4	4	3	1	2	4	3	1	2
3	4	3	4	4	4	4	4	4	4	4	4
4	1	4	5	1	1	1	1	1	1	1	1
4	1	4	5	1	2	5	1	1	2	5	1
4	1	4	5	1	3	1	2	1	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	2	5	1	2	1	3	4	2	1	3	4
4	2	5	1	2	2	2	2	2	2	2	2
4	2	5	1	2	3	4	5	2	3	4	5
4	2	5	1	2	4	5	1	2	4	5	1
4	3	1	2	3	1	1	2	3	1	1	2
4	3	1	2	3	2	2	3	3	2	2	3
4	3	1	2	3	3	3	3	3	3	3	3
4	3	1	2	3	4	3	4	3	4	3	4
4	4	4	4	4	1	4	5	4	1	4	5
4	4	4	4	4	2	5	1	4	2	5	1
4	4	4	4	4	3	1	2	4	3	1	2
4	4	4	4	4	4	4	4	4	4	4	4
CREATE TABLE t1_myisam (
a int NOT NULL,
b int NOT NULL,
c int NOT NULL,
d int NOT NULL,
PRIMARY KEY (`a`,`b`)
) ENGINE=MyISAM;
insert into t1_myisam values
(1,1,1,1), (2,2,1,1), (3,3,1,1), (4,4,1,1);
set ndb_join_pushdown=true;
explain
select *
from t1_myisam as t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
where t1.a=2 and t1.b=2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	const,const	1	Parent of 2 pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	const,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1_myisam as t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
where t1.a=2 and t1.b=2;
a	b	c	d	a	b	c	d	a	b	c	d
2	2	1	1	1	1	1	1	1	1	1	1
drop table t1_myisam;
set ndb_join_pushdown=true;
explain select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.d = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,const	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
where t1.d = 3;
a	b	c	d	a	b	c	d
1	4	2	3	2	3	4	5
3	2	2	3	2	3	4	5
3	3	3	3	3	3	3	3
explain select * 
from t1 
join t1 as t2 on t2.a = t1.c and t2.b = t1.d 
where t1.a > 2 and t1.d = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY	PRIMARY	4	NULL	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,const	1	Child of pushed join@1
select * 
from t1 
join t1 as t2 on t2.a = t1.c and t2.b = t1.d 
where t1.a > 2 and t1.d = 3;
a	b	c	d	a	b	c	d
3	2	2	3	2	3	4	5
3	3	3	3	3	3	3	3
explain select * 
from t1 join t1 as t2 on t2.a = t1.c and t2.b = t1.d 
where t1.d = 3 
order by t1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,const	1	Child of pushed join@1
select * 
from t1 join t1 as t2 on t2.a = t1.c and t2.b = t1.d 
where t1.d = 3 
order by t1.a;
a	b	c	d	a	b	c	d
1	4	2	3	2	3	4	5
3	2	2	3	2	3	4	5
3	3	3	3	3	3	3	3
set ndb_join_pushdown=true;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	test.t1.c	1	Parent of 2 pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	Child of pushed join@1
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	3	1	2	1	2	5	1
1	1	1	1	1	4	2	3	2	3	4	5
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c
left join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	test.t1.c	1	Parent of 2 pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	Child of pushed join@1
select *
from t1
left join t1 as t2 on t2.a = t1.c
left join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	2	5	1	NULL	NULL	NULL	NULL
1	1	1	1	1	3	1	2	1	2	5	1
1	1	1	1	1	4	2	3	2	3	4	5
set ndb_join_pushdown=false;
explain
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	const	10	
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	
select *
from t1
join t1 as t2 on t2.a = t1.c
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	3	1	2	1	2	5	1
1	1	1	1	1	4	2	3	2	3	4	5
explain
select *
from t1
left join t1 as t2 on t2.a = t1.c
left join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	8	const,const	1	
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	const	10	
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	
select *
from t1
left join t1 as t2 on t2.a = t1.c
left join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t1.a = 1 and t1.b = 1;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	2	5	1	NULL	NULL	NULL	NULL
1	1	1	1	1	3	1	2	1	2	5	1
1	1	1	1	1	4	2	3	2	3	4	5
set ndb_join_pushdown=true;
explain
select *
from t1 as t2
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t2.a = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	Child of pushed join@1
select *
from t1 as t2
join t1 as t3 on t3.a = t2.c and t3.b = t2.d
where t2.a = 1;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	3	1	2	1	2	5	1
1	4	2	3	2	3	4	5
set ndb_join_pushdown=true;
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t2.c and t3.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t1.c	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t2.c and t3.b = t1.c;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	1	3	1	2	1	1	1	1
1	4	2	3	1	4	2	3	2	2	2	2
2	1	3	4	2	1	3	4	3	3	3	3
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	2	3	4	5	4	4	4	4
3	1	1	2	3	1	1	2	1	1	1	1
3	2	2	3	3	2	2	3	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	3	3	3
4	1	4	5	4	1	4	5	4	4	4	4
4	3	1	2	4	3	1	2	1	1	1	1
4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t2.c	1	
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.c;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	2	5	1
2	1	3	4	2	1	3	4	3	4	3	4	3	3	3	3
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	2	5	1
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	3	3	3
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t2.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t2.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t2.c	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t2.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.c;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	2	5	1
2	1	3	4	2	1	3	4	3	4	3	4	3	3	3	3
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	2	5	1
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	3	3	3
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t2.d
join t1 as t4 on t4.a = t3.c and t4.b = t1.d;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t2.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t1.d	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t2.d
join t1 as t4 on t4.a = t3.c and t4.b = t1.d;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	3	1	2
2	1	3	4	2	1	3	4	3	4	3	4	3	4	3	4
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	3	1	2
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	4	3	4
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.a and t4.b = t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t2.c	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.a and t4.b = t2.c;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	1	3	1	2	1	2	5	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	2	2	2	2
2	1	3	4	2	1	3	4	3	4	3	4	3	3	3	3
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	1	1	2	3	1	1	2	1	2	5	1	1	1	1	1
3	2	2	3	3	2	2	3	2	3	4	5	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	3	3	3
4	3	1	2	4	3	1	2	1	2	5	1	1	1	1	1
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.b and t4.b = t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t1.d,test.t2.c	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.b and t4.b = t2.c;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	1	3	1	2	1	2	5	1	2	1	3	4
1	4	2	3	1	4	2	3	2	3	4	5	3	2	2	3
2	1	3	4	2	1	3	4	3	4	3	4	4	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	1	1	2	3	1	1	2	1	2	5	1	2	1	3	4
3	2	2	3	3	2	2	3	2	3	4	5	3	2	2	3
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	4	3	1	2
4	3	1	2	4	3	1	2	1	2	5	1	2	1	3	4
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t1.a	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.a;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	1	4	5
2	1	3	4	2	1	3	4	3	4	3	4	3	2	2	3
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	3	1	2
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	3	3	3
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t1.b	1	Child of pushed join@1
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t2.b;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	4	4	4
2	1	3	4	2	1	3	4	3	4	3	4	3	1	1	2
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	2	5	1
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	4	3	4
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t1.c and t4.b = t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.a,test.t2.c	1	Child of pushed join@1; Using where
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t1.c and t4.b = t2.c;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	1	3	1	2	1	2	5	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	2	2	2	2
2	1	3	4	2	1	3	4	3	4	3	4	3	3	3	3
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	1	1	2	3	1	1	2	1	2	5	1	1	1	1	1
3	2	2	3	3	2	2	3	2	3	4	5	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	3	3	3
4	3	1	2	4	3	1	2	1	2	5	1	1	1	1	1
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.a,test.t1.b	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.c,test.t1.d	1	Child of pushed join@1
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	8	test.t3.c,test.t2.b	1	Child of pushed join@1; Using where
select straight_join *
from t1
join t1 as t2 on t2.a = t1.a and t2.b = t1.b
join t1 as t3 on t3.a = t1.c and t3.b = t1.d
join t1 as t4 on t4.a = t3.c and t4.b = t1.b;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	4	2	3	1	4	2	3	2	3	4	5	4	4	4	4
2	1	3	4	2	1	3	4	3	4	3	4	3	1	1	2
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	3	2	2	3	2	3	4	5	4	2	5	1
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	3	4	3	4	3	4	3	4	3	4	3	4
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
set ndb_join_pushdown=true;
explain 
select * from t1 x, t1 y, t1 z, t1 where 
y.a=x.d and y.b=x.b and 
z.a=y.d and 
t1.a = z.d and t1.b=z.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	16	Parent of 4 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
1	SIMPLE	z	ref	PRIMARY	PRIMARY	4	test.y.d	1	Child of pushed join@1
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	8	test.z.d,test.z.b	1	Child of pushed join@1
select * from t1 x, t1 y, t1 z, t1 where 
y.a=x.d and y.b=x.b and 
z.a=y.d and 
t1.a = z.d and t1.b=z.b;
a	b	c	d	a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
1	1	1	1	1	1	1	1	1	2	5	1	1	2	5	1
1	1	1	1	1	1	1	1	1	3	1	2	2	3	4	5
1	1	1	1	1	1	1	1	1	4	2	3	3	4	3	4
1	2	5	1	1	2	5	1	1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1	1	2	5	1	1	2	5	1
1	2	5	1	1	2	5	1	1	3	1	2	2	3	4	5
1	2	5	1	1	2	5	1	1	4	2	3	3	4	3	4
1	4	2	3	3	4	3	4	4	2	5	1	1	2	5	1
1	4	2	3	3	4	3	4	4	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4	4	4	4	4	4	4	4	4
2	2	2	2	2	2	2	2	2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2	2	2	2	2	2	2	2	2
2	2	2	2	2	2	2	2	2	4	5	1	1	4	2	3
2	4	5	1	1	4	2	3	3	1	1	2	2	1	3	4
2	4	5	1	1	4	2	3	3	2	2	3	3	2	2	3
2	4	5	1	1	4	2	3	3	3	3	3	3	3	3	3
2	4	5	1	1	4	2	3	3	4	3	4	4	4	4	4
3	1	1	2	2	1	3	4	4	2	5	1	1	2	5	1
3	1	1	2	2	1	3	4	4	3	1	2	2	3	4	5
3	1	1	2	2	1	3	4	4	4	4	4	4	4	4	4
3	2	2	3	3	2	2	3	3	1	1	2	2	1	3	4
3	2	2	3	3	2	2	3	3	2	2	3	3	2	2	3
3	2	2	3	3	2	2	3	3	3	3	3	3	3	3	3
3	2	2	3	3	2	2	3	3	4	3	4	4	4	4	4
3	3	3	3	3	3	3	3	3	1	1	2	2	1	3	4
3	3	3	3	3	3	3	3	3	2	2	3	3	2	2	3
3	3	3	3	3	3	3	3	3	3	3	3	3	3	3	3
3	3	3	3	3	3	3	3	3	4	3	4	4	4	4	4
3	4	3	4	4	4	4	4	4	2	5	1	1	2	5	1
3	4	3	4	4	4	4	4	4	3	1	2	2	3	4	5
3	4	3	4	4	4	4	4	4	4	4	4	4	4	4	4
4	2	5	1	1	2	5	1	1	1	1	1	1	1	1	1
4	2	5	1	1	2	5	1	1	2	5	1	1	2	5	1
4	2	5	1	1	2	5	1	1	3	1	2	2	3	4	5
4	2	5	1	1	2	5	1	1	4	2	3	3	4	3	4
4	4	4	4	4	4	4	4	4	2	5	1	1	2	5	1
4	4	4	4	4	4	4	4	4	3	1	2	2	3	4	5
4	4	4	4	4	4	4	4	4	4	4	4	4	4	4	4
explain 
select * from t1 x, t1 y where
x.a <= 2 and
y.a=x.d and y.b=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	range	PRIMARY	PRIMARY	4	NULL	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
select * from t1 x, t1 y where
x.a <= 2 and
y.a=x.d and y.b=x.b;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1
1	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4
2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2
2	4	5	1	1	4	2	3
explain 
select * from t1 x, t1 y where
(x.a <= 2 or x.a > 3) and
y.a=x.d and y.b=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	range	PRIMARY	PRIMARY	4	NULL	20	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
select * from t1 x, t1 y where
(x.a <= 2 or x.a > 3) and
y.a=x.d and y.b=x.b;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1
1	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4
2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2
2	4	5	1	1	4	2	3
4	2	5	1	1	2	5	1
4	3	1	2	2	3	4	5
4	4	4	4	4	4	4	4
explain 
select * from t1 x, t1 y where
(x.a >= 2 or x.a < 3) and
y.a=x.d and y.b=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	range	PRIMARY	PRIMARY	4	NULL	20	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
select * from t1 x, t1 y where
(x.a >= 2 or x.a < 3) and
y.a=x.d and y.b=x.b;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1
1	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4
2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2
2	4	5	1	1	4	2	3
3	1	1	2	2	1	3	4
3	2	2	3	3	2	2	3
3	3	3	3	3	3	3	3
3	4	3	4	4	4	4	4
4	2	5	1	1	2	5	1
4	3	1	2	2	3	4	5
4	4	4	4	4	4	4	4
explain 
select * from t1 x, t1 y where
(x.a <= 2 or x.a in (0,5,4)) and
y.a=x.d and y.b=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	range	PRIMARY	PRIMARY	4	NULL	50	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
select * from t1 x, t1 y where
(x.a <= 2 or x.a in (0,5,4)) and
y.a=x.d and y.b=x.b;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1
1	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4
2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2
2	4	5	1	1	4	2	3
4	2	5	1	1	2	5	1
4	3	1	2	2	3	4	5
4	4	4	4	4	4	4	4
explain 
select * from t1 x, t1 y where
(x.a <= 2 or (x.a,x.b) in ((0,0),(5,0),(4,3))) and
y.a=x.d and y.b=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	PRIMARY	NULL	NULL	NULL	16	Parent of 2 pushed join@1; Using where
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d,test.x.b	1	Child of pushed join@1
select * from t1 x, t1 y where
(x.a <= 2 or (x.a,x.b) in ((0,0),(5,0),(4,3))) and
y.a=x.d and y.b=x.b;
a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1
1	2	5	1	1	2	5	1
1	3	1	2	2	3	4	5
1	4	2	3	3	4	3	4
2	1	3	4	4	1	4	5
2	2	2	2	2	2	2	2
2	4	5	1	1	4	2	3
4	3	1	2	2	3	4	5
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.c,t1.d,
t1.a, t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.c,t1.d,
t1.a, t1.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
3	1	1	2	1	1	1	1	1	1	1	1
4	3	1	2	3	1	1	2	3	1	1	2
2	2	2	2	2	2	2	2	2	2	2	2
1	4	2	3	4	2	5	1	4	2	5	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
2	1	3	4	1	3	1	2	1	3	1	2
3	4	3	4	4	3	1	2	4	3	1	2
4	4	4	4	4	4	4	4	4	4	4	4
2	3	4	5	3	4	3	4	3	4	3	4
4	1	4	5	1	4	2	3	1	4	2	3
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.c,t2.d,
t1.a, t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.c,t2.d,
t1.a, t1.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
3	1	1	2	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
4	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	2	2	2	2	2	2	2	2
2	1	3	4	1	3	1	2	1	3	1	2
3	4	3	4	4	3	1	2	4	3	1	2
3	3	3	3	3	3	3	3	3	3	3	3
4	1	4	5	1	4	2	3	1	4	2	3
2	3	4	5	3	4	3	4	3	4	3	4
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a,t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a,t1.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	1	3	4	1	3	1	2	1	3	1	2
2	2	2	2	2	2	2	2	2	2	2	2
2	3	4	5	3	4	3	4	3	4	3	4
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	3	1	2	3	1	1	2	3	1	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a,t2.b,
t1.a, t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a,t2.b,
t1.a, t1.b;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
1	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
2	2	2	2	2	2	2	2	2	2	2	2
2	1	3	4	1	3	1	2	1	3	1	2
2	3	4	5	3	4	3	4	3	4	3	4
3	1	1	2	1	1	1	1	1	1	1	1
3	2	2	3	2	2	2	2	2	2	2	2
3	3	3	3	3	3	3	3	3	3	3	3
3	4	3	4	4	3	1	2	4	3	1	2
4	3	1	2	3	1	1	2	3	1	1	2
4	1	4	5	1	4	2	3	1	4	2	3
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a desc,t1.b desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a desc,t1.b desc;
a	b	c	d	a	b	c	d	a	b	c	d
4	4	4	4	4	4	4	4	4	4	4	4
4	3	1	2	3	1	1	2	3	1	1	2
4	1	4	5	1	4	2	3	1	4	2	3
3	4	3	4	4	3	1	2	4	3	1	2
3	3	3	3	3	3	3	3	3	3	3	3
3	2	2	3	2	2	2	2	2	2	2	2
3	1	1	2	1	1	1	1	1	1	1	1
2	3	4	5	3	4	3	4	3	4	3	4
2	2	2	2	2	2	2	2	2	2	2	2
2	1	3	4	1	3	1	2	1	3	1	2
1	4	2	3	4	2	5	1	4	2	5	1
1	3	1	2	3	1	1	2	3	1	1	2
1	1	1	1	1	1	1	1	1	1	1	1
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.b,t1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.b,t1.a;
a	b	c	d	a	b	c	d	a	b	c	d
1	1	1	1	1	1	1	1	1	1	1	1
2	1	3	4	1	3	1	2	1	3	1	2
3	1	1	2	1	1	1	1	1	1	1	1
4	1	4	5	1	4	2	3	1	4	2	3
2	2	2	2	2	2	2	2	2	2	2	2
3	2	2	3	2	2	2	2	2	2	2	2
1	3	1	2	3	1	1	2	3	1	1	2
2	3	4	5	3	4	3	4	3	4	3	4
3	3	3	3	3	3	3	3	3	3	3	3
4	3	1	2	3	1	1	2	3	1	1	2
1	4	2	3	4	2	5	1	4	2	5	1
3	4	3	4	4	3	1	2	4	3	1	2
4	4	4	4	4	4	4	4	4	4	4	4
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
explain
select *
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
order by t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
explain
select t1.a, t1.b, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.a, t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select t1.a, t1.b, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.a, t1.b;
a	b	count(*)
1	1	1
1	3	1
1	4	1
2	1	1
2	2	1
2	3	1
3	1	1
3	2	1
3	3	1
3	4	1
4	1	1
4	3	1
4	4	1
explain
select t1.a, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	NULL	PRIMARY	8	NULL	16	Parent of 3 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select t1.a, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.a;
a	count(*)
1	3
2	3
3	4
4	3
explain
select t1.b, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	16	Parent of 3 pushed join@1; Using temporary; Using filesort
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t1.c	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	8	test.t1.b,test.t2.b	1	Child of pushed join@1; Using where
select t1.b, count(*)
from t1
join t1 as t2 on t2.a = t1.b and t2.b = t1.c
join t1 as t3 on t3.a = t2.a and t3.b = t2.b
group by t1.b;
b	count(*)
1	4
2	2
3	4
4	3
explain
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4 and t2.b=4
group by t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	const	PRIMARY	PRIMARY	8	const,const	1	Using where; Using filesort
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4 and t2.b=4
group by t2.c;
c	count(distinct t2.a)
4	1
explain
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4
group by t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	ref	PRIMARY	PRIMARY	4	const	10	Using where; Using filesort
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4
group by t2.c;
c	count(distinct t2.a)
1	1
4	1
explain
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4 and t2.b=4
group by t2.c order by t2.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	const	PRIMARY	PRIMARY	8	const,const	1	Using where; Using filesort
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	8	test.t2.c,test.t2.d	1	
select t2.c, count(distinct t2.a)
from t1
join t1 as t2 on t1.a = t2.c and t1.b = t2.d
where t2.a = 4 and t2.b=4
group by t2.c order by t2.c;
c	count(distinct t2.a)
4	1
drop table t1;
create table t1 (a int, b int, primary key(a) using hash) engine = ndb;
insert into t1 values (1, 2);
insert into t1 values (2, 3);
insert into t1 values (3, 1);
set ndb_join_pushdown=true;
explain
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY	PRIMARY	4	NULL	3	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b;
a	b	a	b
1	2	2	3
3	1	1	2
drop table t1;
create table t1 (a int, b int, primary key(a)) engine = ndb;
insert into t1 values (1, 2);
insert into t1 values (2, 3);
insert into t1 values (3, 1);
set ndb_join_pushdown=true;
explain
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY	PRIMARY	4	NULL	3	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b;
a	b	a	b
1	2	2	3
3	1	1	2
explain
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b
order by t1.a desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY	PRIMARY	4	NULL	3	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select *
from t1, t1 as t2
where t1.a in (1,3,5)
and t2.a = t1.b
order by t1.a desc;
a	b	a	b
3	1	1	2
1	2	2	3
drop table t1;
set ndb_join_pushdown=true;
create table t1 (a int, b int, primary key(a)) engine = ndb;
insert into t1 values (0x1f, 0x2f);
insert into t1 values (0x2f, 0x3f);
insert into t1 values (0x3f, 0x1f);
create table t2 (c int, d int, primary key(c)) engine = ndb;
insert into t2 values (0x1f, 0x2f);
insert into t2 values (0x2f, 0x3f);
insert into t2 values (0x3f, 0x1f);
create table t3 (a3 int, b3 int, c3 int not null, d3 int not null,
primary key(a3, b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
create table t3_hash (a3 int, b3 int, c3 int not null, d3 int not null,
primary key(a3, b3) using hash) engine = ndb;
insert into t3_hash values (0x1f, 0x2f, 1, 0x1f);
insert into t3_hash values (0x2f, 0x3f, 2, 0x2f);
insert into t3_hash values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y, t1 where y.a3=x.d3 and y.b3=x.b3 and t1.a = y.d3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 3 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,test.x.b3	1	Child of pushed join@1
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.y.d3	1	Child of pushed join@1
select * from t3 x, t3 y, t1 where y.a3=x.d3 and y.b3=x.b3 and t1.a = y.d3;
a3	b3	c3	d3	a3	b3	c3	d3	a	b
31	47	1	31	31	47	1	31	31	47
47	63	2	47	47	63	2	47	47	63
63	31	3	63	63	31	3	63	63	31
explain
select *
from t3 x, t3 y, t3 z, t3 z2, t1
where y.a3=x.d3 and y.b3=x.b3 and
z.a3=y.d3 and z.b3=y.b3 and
z2.a3=z.d3 and z2.b3=z.b3 and
t1.a = z2.d3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 5 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,test.x.b3	1	Child of pushed join@1
1	SIMPLE	z	eq_ref	PRIMARY	PRIMARY	8	test.y.d3,test.x.b3	1	Child of pushed join@1
1	SIMPLE	z2	eq_ref	PRIMARY	PRIMARY	8	test.z.d3,test.y.b3	1	Child of pushed join@1; Using where
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.z2.d3	1	Child of pushed join@1
select *
from t3 x, t3 y, t3 z, t3 z2, t1
where y.a3=x.d3 and y.b3=x.b3 and
z.a3=y.d3 and z.b3=y.b3 and
z2.a3=z.d3 and z2.b3=z.b3 and
t1.a = z2.d3;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3	a	b
31	47	1	31	31	47	1	31	31	47	1	31	31	47	1	31	31	47
47	63	2	47	47	63	2	47	47	63	2	47	47	63	2	47	47	63
63	31	3	63	63	31	3	63	63	31	3	63	63	31	3	63	63	31
explain
select straight_join * from t1 x, t1 y where y.a=0x1f and x.b = 0x1f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Using where with pushed condition
1	SIMPLE	y	const	PRIMARY	PRIMARY	4	const	1	
select straight_join * from t1 x, t1 y where y.a=0x1f and x.b = 0x1f;
a	b	a	b
63	31	31	47
explain
select straight_join * from t1 x, t1 y where y.a=x.b and x.b = 0x1f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Using where with pushed condition
1	SIMPLE	y	const	PRIMARY	PRIMARY	4	const	1	Using where
select straight_join * from t1 x, t1 y where y.a=x.b and x.b = 0x1f;
a	b	a	b
63	31	31	47
create unique index t3_d3 on t3(d3);
create unique index t3_d3 on t3_hash(d3);
commit;
explain
select * from t3 x, t3 y where x.d3=31 and y.a3=x.d3 and y.b3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	const	t3_d3	t3_d3	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	const,test.x.b3	1	Child of pushed join@1
select * from t3 x, t3 y where x.d3=31 and y.a3=x.d3 and y.b3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
explain
select * from t3 x, t3 y where x.d3=0 and y.a3=x.d3 and y.b3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	const	t3_d3	t3_d3	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	const,test.x.b3	1	Child of pushed join@1
select * from t3 x, t3 y where x.d3=0 and y.a3=x.d3 and y.b3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
explain
select * from t1 x, t3 y where y.d3=x.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	t3_d3	t3_d3	4	test.x.b	1	Child of pushed join@1
select * from t1 x, t3 y where y.d3=x.b;
a	b	a3	b3	c3	d3
31	47	47	63	2	47
47	63	63	31	3	63
63	31	31	47	1	31
explain
select * from t3 x, t3 y where x.d3=31 and y.d3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	const	t3_d3	t3_d3	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	t3_d3	t3_d3	4	test.x.b3	1	Child of pushed join@1
select * from t3 x, t3 y where x.d3=31 and y.d3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	47	63	2	47
explain
select * from t3 x, t3 y where x.d3=31 and y.d3=x.c3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	const	t3_d3	t3_d3	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	t3_d3	t3_d3	4	test.x.c3	1	Child of pushed join@1
select * from t3 x, t3 y where x.d3=31 and y.d3=x.c3;
a3	b3	c3	d3	a3	b3	c3	d3
explain
select * from t3 x, t3 y 
where ((x.a3=0x2f and x.b3=0x3f) or x.d3=0x1f)
and  (y.a3=x.d3 and y.b3=x.b3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	index_merge	PRIMARY,t3_d3	t3_d3,PRIMARY	4,8	NULL	2	Parent of 2 pushed join@1; Using sort_union(t3_d3,PRIMARY); Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,test.x.b3	1	Child of pushed join@1
select * from t3 x, t3 y
where ((x.a3=0x2f and x.b3=0x3f) or x.d3=0x1f)
and  (y.a3=x.d3 and y.b3=x.b3);
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
explain
select * from t3_hash x, t3_hash y
where ((x.a3=0x2f and x.b3=0x3f) or x.d3=0x1f)
and  (y.a3=x.d3 and y.b3=x.b3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	index_merge	PRIMARY,t3_d3	PRIMARY,t3_d3	8,4	NULL	2	Parent of 2 pushed join@1; Using sort_union(PRIMARY,t3_d3); Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,test.x.b3	1	Child of pushed join@1
select * from t3_hash x, t3_hash y
where ((x.a3=0x2f and x.b3=0x3f) or x.d3=0x1f)
and  (y.a3=x.d3 and y.b3=x.b3);
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
explain
select * from t3 x, t3 y where x.d3>=31 and y.d3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	range	t3_d3	t3_d3	4	NULL	1	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	t3_d3	t3_d3	4	test.x.b3	1	Child of pushed join@1
select * from t3 x, t3 y where x.d3>=31 and y.d3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	47	63	2	47
47	63	2	47	63	31	3	63
63	31	3	63	31	47	1	31
insert into t1 values (0x4f, null);
select * from t1 left join t1 as t2 on t2.a = t1.b;
a	b	a	b
31	47	47	63
47	63	63	31
63	31	31	47
79	NULL	NULL	NULL
drop table t1,t2,t3, t3_hash;
create table t3 (a3 int, b3 int, c3 int, d3 int,
primary key(b3, a3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
create table t3_hash (a3 int, b3 int, c3 int, d3 int,
primary key(b3,a3) using hash) engine = ndb;
insert into t3_hash values (0x1f, 0x2f, 1, 0x1f);
insert into t3_hash values (0x2f, 0x3f, 2, 0x2f);
insert into t3_hash values (0x3f, 0x1f, 3, 0x3f);
create table t3_unq (pk int, a3 int not null, b3 int not null, c3 int, d3 int,
primary key(pk) using hash, unique key(b3,a3) using hash) engine = ndb;
insert into t3_unq values (1001, 0x1f, 0x2f, 1, 0x1f);
insert into t3_unq values (1002, 0x2f, 0x3f, 2, 0x2f);
insert into t3_unq values (1003, 0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where y.a3=x.d3 and y.b3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	PRIMARY	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.b3,test.x.d3	1	Child of pushed join@1
select * from t3 x, t3 y where y.a3=x.d3 and y.b3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63
explain
select * from t3_hash x, t3_hash y where y.a3=x.d3 and y.b3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	PRIMARY	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.b3,test.x.d3	1	Child of pushed join@1
select * from t3_hash x, t3_hash y where y.a3=x.d3 and y.b3=x.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63
explain
select * from t3_unq x, t3_unq y where y.a3=x.d3 and y.b3=x.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	b3	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	b3	b3	8	test.x.b3,test.x.d3	1	Child of pushed join@1
select * from t3_unq x, t3_unq y where y.a3=x.d3 and y.b3=x.b3;
pk	a3	b3	c3	d3	pk	a3	b3	c3	d3
1001	31	47	1	31	1001	31	47	1	31
1002	47	63	2	47	1002	47	63	2	47
1003	63	31	3	63	1003	63	31	3	63
drop table t3, t3_hash, t3_unq;
create table t3 (a3 int, b3 int, c3 int, d3 int,
primary key(a3), unique key(d3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
insert into t3 values (0x4f, 0,    NULL, NULL);
explain
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.d3
left outer join t3 as t3 on t3.a3 = t2.d3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	Parent of 3 pushed join@1
1	SIMPLE	t2	ref	d3	d3	5	test.t1.d3	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.d3	1	Child of pushed join@1
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.d3
left outer join t3 as t3 on t3.a3 = t2.d3;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63	63	31	3	63
79	0	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
explain
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 = 47;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	d3	d3	5	const	1	Parent of 3 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	ref	d3	d3	5	test.t1.a3	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.d3	1	Child of pushed join@1
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 = 47;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47	47	63	2	47
explain
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 >= 47;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	d3	d3	5	NULL	1	Parent of 3 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	ref	d3	d3	5	test.t1.a3	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.d3	1	Child of pushed join@1
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 >= 47;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63	63	31	3	63
explain
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 is NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	d3	d3	5	const	1	Parent of 3 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	ref	d3	d3	5	test.t1.a3	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.d3	1	Child of pushed join@1
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 is NULL;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
79	0	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
explain
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 is not NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	d3	d3	5	NULL	1	Parent of 3 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	ref	d3	d3	5	test.t1.a3	1	Child of pushed join@1
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.d3	1	Child of pushed join@1
select * from t3 as t1
left outer join t3 as t2 on t2.d3 = t1.a3
left outer join t3 as t3 on t3.a3 = t2.d3
where t1.d3 is not NULL;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63	63	31	3	63
drop table t3;
create table t3 (a3 int not null, b3 int not null, c3 int, d3 int,
primary key(a3), unique key(b3,d3), unique key(c3,b3), unique key(c3,d3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1,    0x1f);
insert into t3 values (0x2f, 0x3f, 2,    0x2f);
insert into t3 values (0x3f, 0x1f, 3,    0x3f);
insert into t3 values (0x40, 0,    NULL, NULL);
insert into t3 values (0x41, 0,    NULL, NULL);
insert into t3 values (0x42, 0,    4,    NULL);
insert into t3 values (0x43, 0,    NULL, 0x43);
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	4	test.X.b3	1	Child of pushed join@1
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63
64	0	NULL	NULL	64	0	NULL	NULL
64	0	NULL	NULL	65	0	NULL	NULL
64	0	NULL	NULL	66	0	4	NULL
64	0	NULL	NULL	67	0	NULL	67
65	0	NULL	NULL	64	0	NULL	NULL
65	0	NULL	NULL	65	0	NULL	NULL
65	0	NULL	NULL	66	0	4	NULL
65	0	NULL	NULL	67	0	NULL	67
66	0	4	NULL	64	0	NULL	NULL
66	0	4	NULL	65	0	NULL	NULL
66	0	4	NULL	66	0	4	NULL
66	0	4	NULL	67	0	NULL	67
67	0	NULL	67	64	0	NULL	NULL
67	0	NULL	67	65	0	NULL	NULL
67	0	NULL	67	66	0	4	NULL
67	0	NULL	67	67	0	NULL	67
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 = 0x2f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 = 0x2f;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.d3 = 0x2f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	c3,c3_2	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	c3,c3_2	c3	5	test.X.c3	1	Child of pushed join@1; Using where with pushed condition
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.d3 = 0x2f;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.d3 = Y.d3
where Y.b3 = 0x2f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	NULL	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	const,test.X.d3	1	Child of pushed join@1; Using where
select straight_join * 
from t3 as X JOIN t3 as Y on X.d3 = Y.d3
where Y.b3 = 0x2f;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.d3 = Y.d3
where Y.b3 = 0x20+0x2f;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	NULL	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	const,test.X.d3	1	Child of pushed join@1; Using where
select straight_join * 
from t3 as X JOIN t3 as Y on X.d3 = Y.d3
where Y.b3 = 0x20+0x2f;
a3	b3	c3	d3	a3	b3	c3	d3
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 is not NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	4	test.X.b3	1	Child of pushed join@1; Using where with pushed condition
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 is not NULL;
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	31	47	1	31
47	63	2	47	47	63	2	47
63	31	3	63	63	31	3	63
64	0	NULL	NULL	67	0	NULL	67
65	0	NULL	NULL	67	0	NULL	67
66	0	4	NULL	67	0	NULL	67
67	0	NULL	67	67	0	NULL	67
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 is NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Using where with pushed condition
select straight_join * 
from t3 as X JOIN t3 as Y on X.b3 = Y.b3
where Y.d3 is NULL;
a3	b3	c3	d3	a3	b3	c3	d3
64	0	NULL	NULL	64	0	NULL	NULL
64	0	NULL	NULL	65	0	NULL	NULL
64	0	NULL	NULL	66	0	4	NULL
65	0	NULL	NULL	64	0	NULL	NULL
65	0	NULL	NULL	65	0	NULL	NULL
65	0	NULL	NULL	66	0	4	NULL
66	0	4	NULL	64	0	NULL	NULL
66	0	4	NULL	65	0	NULL	NULL
66	0	4	NULL	66	0	4	NULL
67	0	NULL	67	64	0	NULL	NULL
67	0	NULL	67	65	0	NULL	NULL
67	0	NULL	67	66	0	4	NULL
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.b3 = 0;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	c3,c3_2	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3,c3,c3_2	c3	9	test.X.c3,const	1	Child of pushed join@1; Using where
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.b3 = 0;
a3	b3	c3	d3	a3	b3	c3	d3
66	0	4	NULL	66	0	4	NULL
explain
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.b3 is NULL;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	NULL	NULL	NULL	NULL	NULL	NULL	NULL	Impossible WHERE
select straight_join * 
from t3 as X JOIN t3 as Y on X.c3 = Y.c3
where Y.b3 is NULL;
a3	b3	c3	d3	a3	b3	c3	d3
explain
select straight_join * from
t3 as X1
JOIN t3 as Y1 on X1.b3 = Y1.b3 and X1.d3 = Y1.d3
JOIN t3 as X2 on X2.b3 = Y1.b3
JOIN t3 as Y2 on Y2.b3 = X2.c3 and Y2.d3 = X1.c3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X1	ALL	b3,c3,c3_2	NULL	NULL	NULL	7	Parent of 4 pushed join@1
1	SIMPLE	Y1	ref	b3	b3	9	test.X1.b3,test.X1.d3	1	Child of pushed join@1; Using where
1	SIMPLE	X2	ref	b3,c3,c3_2	b3	4	test.X1.b3	1	Child of pushed join@1
1	SIMPLE	Y2	ref	b3	b3	9	test.X2.c3,test.X1.c3	1	Child of pushed join@1; Using where
select straight_join * from
t3 as X1
JOIN t3 as Y1 on X1.b3 = Y1.b3 and X1.d3 = Y1.d3
JOIN t3 as X2 on X2.b3 = Y1.b3
JOIN t3 as Y2 on Y2.b3 = X2.c3 and Y2.d3 = X1.c3;
a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3	a3	b3	c3	d3
prepare stmt1 from
'select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = 0x2f';
execute stmt1;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
execute stmt1;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop prepare stmt1;
execute stmt1;
ERROR HY000: Unknown prepared statement handler (stmt1) given to EXECUTE
prepare stmt1 from
'select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = 0x2f';
prepare stmt1 from
'select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = 0x2f';
drop prepare stmt1;
prepare stmt1 from
'explain select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = 0x2f';
execute stmt1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
execute stmt1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
commit;
execute stmt1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
drop index b3 on t3;
execute stmt1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	NULL	NULL	NULL	NULL	7	
1	SIMPLE	Y	ALL	NULL	NULL	NULL	NULL	7	Using where with pushed condition; Using join buffer
create unique index b3 on t3(b3,d3);
execute stmt1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
drop prepare stmt1;
prepare stmt1 from
'explain select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = ?';
set @a=47;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
set @a=0;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Child of pushed join@1; Using where with pushed condition
set @a=NULL;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	ALL	b3	NULL	NULL	NULL	7	
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,const	1	Using where
prepare stmt1 from
'select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3
  where Y.d3 = ?';
set @a=47;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
set @a=0;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
set @a=NULL;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
prepare stmt1 from
'explain select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3 and X.d3 = Y.d3
  where X.a3 = ?';
set @a=47;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	const	PRIMARY,b3	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,test.X.d3	1	Child of pushed join@1; Using where
set @a=0;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	X	const	PRIMARY,b3	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	Y	ref	b3	b3	9	test.X.b3,test.X.d3	1	Child of pushed join@1; Using where
set @a=NULL;
execute stmt1 using @a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	NULL	NULL	NULL	NULL	NULL	NULL	NULL	Impossible WHERE noticed after reading const tables
prepare stmt1 from
'select straight_join * 
  from t3 as X JOIN t3 as Y on X.b3 = Y.b3 and X.d3 = Y.d3
  where X.a3 = ?';
set @a=47;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
set @a=0;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
set @a=NULL;
execute stmt1 using @a;
a3	b3	c3	d3	a3	b3	c3	d3
drop table t3;
set @a=47;
execute stmt1 using @a;
ERROR 42S02: Table 'test.t3' doesn't exist
create table t1 (a int primary key, b int, c int, index(b,c)) engine = ndb;
insert into t1 values (1,null, 2);
insert into t1 values (2,1, null);
insert into t1 values (3,2,2);
insert into t1 values (4,null, 2);
insert into t1 values (5,1, null);
insert into t1 values (6,2,2);
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
set ndb_join_pushdown=false;
select *
from t1
join t1 as t2 on (t2.b = t1.b or t2.b = t1.a)
join t1 as t3 on t3.a = t2.a
join t1 as t4 on t4.a = t3.b
;
a	b	c	a	b	c	a	b	c	a	b	c
1	NULL	2	2	1	NULL	2	1	NULL	1	NULL	2
1	NULL	2	5	1	NULL	5	1	NULL	1	NULL	2
2	1	NULL	2	1	NULL	2	1	NULL	1	NULL	2
2	1	NULL	3	2	2	3	2	2	2	1	NULL
2	1	NULL	5	1	NULL	5	1	NULL	1	NULL	2
2	1	NULL	6	2	2	6	2	2	2	1	NULL
3	2	2	3	2	2	3	2	2	2	1	NULL
3	2	2	6	2	2	6	2	2	2	1	NULL
5	1	NULL	2	1	NULL	2	1	NULL	1	NULL	2
5	1	NULL	5	1	NULL	5	1	NULL	1	NULL	2
6	2	2	3	2	2	3	2	2	2	1	NULL
6	2	2	6	2	2	6	2	2	2	1	NULL
set ndb_join_pushdown=true;
select *
from t1
join t1 as t2 on (t2.b = t1.b or t2.b = t1.a)
join t1 as t3 on t3.a = t2.a
join t1 as t4 on t4.a = t3.b
;
a	b	c	a	b	c	a	b	c	a	b	c
1	NULL	2	2	1	NULL	2	1	NULL	1	NULL	2
1	NULL	2	5	1	NULL	5	1	NULL	1	NULL	2
2	1	NULL	2	1	NULL	2	1	NULL	1	NULL	2
2	1	NULL	3	2	2	3	2	2	2	1	NULL
2	1	NULL	5	1	NULL	5	1	NULL	1	NULL	2
2	1	NULL	6	2	2	6	2	2	2	1	NULL
3	2	2	3	2	2	3	2	2	2	1	NULL
3	2	2	6	2	2	6	2	2	2	1	NULL
5	1	NULL	2	1	NULL	2	1	NULL	1	NULL	2
5	1	NULL	5	1	NULL	5	1	NULL	1	NULL	2
6	2	2	3	2	2	3	2	2	2	1	NULL
6	2	2	6	2	2	6	2	2	2	1	NULL
explain
select *
from t1 where b in 
(select x.a from t1 as x join t1 as y on (y.a = x.b))
xor c > 5;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	6	Using where
2	DEPENDENT SUBQUERY	x	eq_ref	PRIMARY,b	PRIMARY	4	func	1	Parent of 2 pushed join@1; Using where; Full scan on NULL key
2	DEPENDENT SUBQUERY	y	eq_ref	PRIMARY	PRIMARY	4	test.x.b	1	Child of pushed join@1; Using where
select *
from t1 where b in 
(select x.a from t1 as x join t1 as y on (y.a = x.b))
xor c > 5;
a	b	c
3	2	2
6	2	2
explain
select t1.a, (select straight_join X.a from t1 as X join t1 as Y on X.a=Y.b where Y.a = t1.b) from t1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	6	
2	DEPENDENT SUBQUERY	X	ALL	PRIMARY	NULL	NULL	NULL	6	
2	DEPENDENT SUBQUERY	Y	eq_ref	PRIMARY,b	PRIMARY	4	test.t1.b	1	Using where
select t1.a, (select straight_join X.a from t1 as X join t1 as Y on X.a=Y.b where Y.a = t1.b) from t1;
a	(select straight_join X.a from t1 as X join t1 as Y on X.a=Y.b where Y.a = t1.b)
1	NULL
2	NULL
3	1
4	NULL
5	NULL
6	1
drop table t1;
create table t1 (a int primary key, b int) engine = ndb;
create table t2 (a int primary key, b int) engine = myisam;
insert into t1 values(1,1), (2,2), (3,3), (4,4);
insert into t2 values(1,1), (2,2), (3,3), (4,4);
explain
select * from t1, t2, t1 as t3
where t2.a = t1.b
and t3.a = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	
select * from t1, t2, t1 as t3
where t2.a = t1.b
and t3.a = t2.b;
a	b	a	b	a	b
1	1	1	1	1	1
2	2	2	2	2	2
3	3	3	3	3	3
4	4	4	4	4	4
drop table t1, t2;
create table t1 (a int primary key, b int, c blob) engine = ndb;
insert into t1 values (1,1, 'kalle');
insert into t1 values (2,1, 'kalle');
insert into t1 values (3,3, 'kalle');
insert into t1 values (4,1, 'kalle');
create table t2 (a int primary key, b int) engine = ndb;
insert into t2 values (1,1);
insert into t2 values (2,1);
insert into t2 values (3,3);
insert into t2 values (4,1);
set ndb_join_pushdown=true;
explain
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t2.a = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t2.a = t1.b;
a	b	a	b
1	1	1	1
2	1	1	1
3	3	3	3
4	1	1	1
explain
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t2.a = t1.b
and t1.a = 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t2.a = t1.b
and t1.a = 2;
a	b	a	b
2	1	1	1
explain
select t1.a, t1.b, t2.a, t2.b
from t1, t2
where t1.a = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	ALL	NULL	NULL	NULL	NULL	4	Parent of 2 pushed join@1
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	Child of pushed join@1
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t2.a = t1.b;
a	b	a	b
1	1	1	1
2	1	1	1
3	3	3	3
4	1	1	1
explain
select t1.a, t1.b, t2.a, t2.b
from t1, t2
where t1.a = t2.b
and t2.a = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	Child of pushed join@1
select t1.a, t1.b, t2.a, t2.b 
from t1, t2
where t1.a = t2.b
and t2.a = 3;
a	b	a	b
3	3	3	3
explain
select *
from t1, t2
where t2.a = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	
select *
from t1, t2
where t2.a = t1.b;
a	b	c	a	b
1	1	kalle	1	1
2	1	kalle	1	1
3	3	kalle	3	3
4	1	kalle	1	1
explain
select *
from t1, t2
where t2.a = t1.b
and t1.a = 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	4	const	1	
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	const	1	
select *
from t1, t2
where t2.a = t1.b
and t1.a = 2;
a	b	c	a	b
2	1	kalle	1	1
explain
select *
from t1, t2
where t1.a = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	ALL	NULL	NULL	NULL	NULL	4	
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	
select *
from t1, t2
where t2.a = t1.b;
a	b	c	a	b
1	1	kalle	1	1
2	1	kalle	1	1
3	3	kalle	3	3
4	1	kalle	1	1
explain
select *
from t1, t2
where t1.a = t2.b
and t2.a = 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t2	const	PRIMARY	PRIMARY	4	const	1	
1	SIMPLE	t1	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	
select *
from t1, t2
where t1.a = t2.b
and t2.a = 3;
a	b	c	a	b
3	3	kalle	3	3
drop table t1, t2;
create table t3 (a3 int, b3 tinyint, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3="63";
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	5	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3="63";
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 tinyint unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	5	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 smallint, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	6	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 smallint unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	6	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 mediumint, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	7	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 mediumint unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	7	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 int, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 int unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 bigint, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 bigint unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=(60+3);
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 boolean, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0, 1, 0x1f);
insert into t3 values (0x2f, 1, 2, 0x2f);
insert into t3 values (0x3f, 0, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	5	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=1;
a3	b3	c3	d3	a3	b3	c3	d3
47	1	2	47	47	1	2	47
drop table t3;
create table t3 (a3 int, b3 float, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 2.71, 1, 0x1f);
insert into t3 values (0x2f, 3.00, 2, 0x2f);
insert into t3 values (0x3f, 0.50, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.0;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,const	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.0;
a3	b3	c3	d3	a3	b3	c3	d3
47	3	2	47	47	3	2	47
drop table t3;
create table t3 (a3 int, b3 float unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 2.71, 1, 0x1f);
insert into t3 values (0x2f, 3.00, 2, 0x2f);
insert into t3 values (0x3f, 0.50, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.0;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	8	test.x.d3,const	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.0;
a3	b3	c3	d3	a3	b3	c3	d3
47	3	2	47	47	3	2	47
drop table t3;
create table t3 (a3 int, b3 double, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 2.71, 1, 0x1f);
insert into t3 values (0x2f, 3.14, 2, 0x2f);
insert into t3 values (0x3f, 0.50, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
a3	b3	c3	d3	a3	b3	c3	d3
47	3.14	2	47	47	3.14	2	47
drop table t3;
create table t3 (a3 int, b3 double unsigned, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 2.71, 1, 0x1f);
insert into t3 values (0x2f, 3.14, 2, 0x2f);
insert into t3 values (0x3f, 0.50, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
a3	b3	c3	d3	a3	b3	c3	d3
47	3.14	2	47	47	3.14	2	47
drop table t3;
create table t3 (a3 int, b3 decimal, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=63;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	9	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=63;
a3	b3	c3	d3	a3	b3	c3	d3
47	63	2	47	47	63	2	47
drop table t3;
create table t3 (a3 int, b3 decimal(12,4), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 2.71, 1, 0x1f);
insert into t3 values (0x2f, 3.14, 2, 0x2f);
insert into t3 values (0x3f, 0.50, 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	10	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3=3.14;
a3	b3	c3	d3	a3	b3	c3	d3
47	3.1400	2	47	47	3.1400	2	47
drop table t3;
create table t3 (a3 int, b3 date, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, '1905-05-17', 1, 0x1f);
insert into t3 values (0x2f, '2000-02-28', 2, 0x2f);
insert into t3 values (0x3f, '2000-02-29', 3, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='2000-02-28';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	7	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='2000-02-28';
a3	b3	c3	d3	a3	b3	c3	d3
47	2000-02-28	2	47	47	2000-02-28	2	47
drop table t3;
create table t3 (a3 int, b3 datetime, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, '1905-05-17 12:30:00', 1, 0x1f);
insert into t3 values (0x2f, '2000-02-28 23:59:00', 2, 0x2f);
insert into t3 values (0x3f, '2000-02-29 12:59:59', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='2000-02-28 23:59';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='2000-02-28 23:59';
a3	b3	c3	d3	a3	b3	c3	d3
47	2000-02-28 23:59:00	2	47	47	2000-02-28 23:59:00	2	47
drop table t3;
create table t3 (a3 int, b3 time, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, '12:30:00', 1, 0x1f);
insert into t3 values (0x2f, '23:59:00', 2, 0x2f);
insert into t3 values (0x3f, '12:59:59', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='23:59';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	7	test.x.d3,const	1	Child of pushed join@1
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='23:59';
a3	b3	c3	d3	a3	b3	c3	d3
47	23:59:00	2	47	47	23:59:00	2	47
drop table t3;
create table t3 (a3 int, b3 char(16), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 'Ole', 1, 0x1f);
insert into t3 values (0x2f, 'Dole', 2, 0x2f);
insert into t3 values (0x3f, 'Doffen', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	20	test.x.d3,const	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
a3	b3	c3	d3	a3	b3	c3	d3
47	Dole	2	47	47	Dole	2	47
drop table t3;
create table t3 (a3 int, b3 varchar(16), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 'Ole', 1, 0x1f);
insert into t3 values (0x2f, 'Dole', 2, 0x2f);
insert into t3 values (0x3f, 'Doffen', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	22	test.x.d3,const	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
a3	b3	c3	d3	a3	b3	c3	d3
47	Dole	2	47	47	Dole	2	47
drop table t3;
create table t3 (a3 int, b3 varchar(512), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 'Ole', 1, 0x1f);
insert into t3 values (0x2f, 'Dole', 2, 0x2f);
insert into t3 values (0x3f, 'Doffen', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	518	test.x.d3,const	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
a3	b3	c3	d3	a3	b3	c3	d3
47	Dole	2	47	47	Dole	2	47
drop table t3;
create table t3 (a3 int, b3 binary(16), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 'Ole', 1, 0x1f);
insert into t3 values (0x2f, 'Dole', 2, 0x2f);
insert into t3 values (0x3f, 'Doffen', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	20	test.x.d3,const	1	Child of pushed join@1; Using where
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
a3	b3	c3	d3	a3	b3	c3	d3
drop table t3;
create table t3 (a3 int, b3 varbinary(16), c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 'Ole', 1, 0x1f);
insert into t3 values (0x2f, 'Dole', 2, 0x2f);
insert into t3 values (0x3f, 'Doffen', 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	4	const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	22	test.x.d3,const	1	Child of pushed join@1; Using where
select * from t3 x, t3 y where x.a3=0x2f and y.a3=x.d3 and y.b3='Dole';
a3	b3	c3	d3	a3	b3	c3	d3
47	Dole	2	47	47	Dole	2	47
drop table t3;
create table t3 (a3 int, b3 tinyint, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values (0x1f, 0x2f, 1, 0x1f);
insert into t3 values (0x2f, 0x3f, 2, 0x2f);
insert into t3 values (0x3f, 0x1f, 3, 0x3f);
explain
select * from t3 x, t3 y where y.a3=x.b3 and y.b3="63";
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	5	test.x.b3,const	1	Using where
select * from t3 x, t3 y where y.a3=x.b3 and y.b3="63";
a3	b3	c3	d3	a3	b3	c3	d3
31	47	1	31	47	63	2	47
drop table t3;
create table t3 (a3 varchar(16), b3 int, c3 int not null, d3 int not null, 
primary key(a3,b3)) engine = ndb;
insert into t3 values ('Ole', 0x1f, 1, 0x1f);
insert into t3 values ('Dole', 0x2f, 2, 0x2f);
insert into t3 values ('Doffen', 0x3f, 2, 0x3f);
explain
select * from t3 x, t3 y where x.a3='Dole' and x.b3=0x2f and y.a3=x.a3 and y.b3=x.d3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	const	PRIMARY	PRIMARY	22	const,const	1	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	22	const,test.x.d3	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3='Dole' and x.b3=0x2f and y.a3=x.a3 and y.b3=x.d3;
a3	b3	c3	d3	a3	b3	c3	d3
Dole	47	2	47	Dole	47	2	47
explain
select * from t3 x, t3 y where x.a3='Dole' and y.a3=x.a3 and y.b3=x.d3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY	PRIMARY	18	const	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	22	const,test.x.d3	1	Child of pushed join@1; Using where with pushed condition
select * from t3 x, t3 y where x.a3='Dole' and y.a3=x.a3 and y.b3=x.d3;
a3	b3	c3	d3	a3	b3	c3	d3
Dole	47	2	47	Dole	47	2	47
drop table t3;
create table t1 (k int primary key, b int) engine = ndb;
insert into t1 values (1,1), (2,1), (3,1), (4,1);
explain
select *
from t1
straight_join t1 as t2 on t2.k = t1.b+0
straight_join t1 as t3 on t3.k = t2.b
straight_join t1 as t4 on t4.k = t1.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	4	func	1	Parent of 2 pushed join@2; Using where
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	Child of pushed join@2
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select *
from t1
straight_join t1 as t2 on t2.k = t1.b+0
straight_join t1 as t3 on t3.k = t2.b
straight_join t1 as t4 on t4.k = t1.b;
k	b	k	b	k	b	k	b
1	1	1	1	1	1	1	1
2	1	1	1	1	1	1	1
3	1	1	1	1	1	1	1
4	1	1	1	1	1	1	1
explain
select *
from t1
straight_join t1 as t2 on t2.k = t1.b+0
straight_join t1 as t3 on t3.k = t2.b
straight_join t1 as t4 on t4.k = t1.b
where t2.k = 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	4	Parent of 2 pushed join@1; Using where
1	SIMPLE	t2	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@2
1	SIMPLE	t3	eq_ref	PRIMARY	PRIMARY	4	test.t2.b	1	Child of pushed join@2
1	SIMPLE	t4	eq_ref	PRIMARY	PRIMARY	4	test.t1.b	1	Child of pushed join@1
select *
from t1
straight_join t1 as t2 on t2.k = t1.b+0
straight_join t1 as t3 on t3.k = t2.b
straight_join t1 as t4 on t4.k = t1.b
where t2.k = 1;
k	b	k	b	k	b	k	b
1	1	1	1	1	1	1	1
2	1	1	1	1	1	1	1
3	1	1	1	1	1	1	1
4	1	1	1	1	1	1	1
drop table t1;
CREATE TABLE t1 (
a int NOT NULL auto_increment,
b char(255) not null,
c int NOT NULL,
d char(255) not null,
PRIMARY KEY (`a`,`b`)
) ENGINE=ndbcluster;
select count(*)
from t1 
join t1 as t2 on t2.a = t1.c and t2.b = t1.d
join t1 as t3 on t3.a = t2.c and t3.b = t2.d;
count(*)
2996
drop table t1;
CREATE LOGFILE GROUP lg1
ADD UNDOFILE 'undofile.dat'
INITIAL_SIZE 1M
UNDO_BUFFER_SIZE = 1M
ENGINE=NDB;
CREATE TABLESPACE ts1
ADD DATAFILE 'datafile.dat'
USE LOGFILE GROUP lg1
INITIAL_SIZE 6M
ENGINE NDB;
create table T1 (a int NOT NULL, 
b int NOT NULL storage disk, 
c int NOT NULL storage memory, 
primary key(a)) 
TABLESPACE ts1 STORAGE DISK engine = ndb;
insert into T1 values (10, 11, 11);
insert into T1 values (11, 12, 12);
insert into T1 values (12, 13, 13);
create table T2 (a int not null, 
b int not null, primary key(a)) engine = ndb;
insert into T2 values (10, 11);
insert into T2 values (11, 12);
insert into T2 values (12, 13);
explain select * from T1, T2 where T1.c = T2.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T1	ALL	NULL	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	T2	eq_ref	PRIMARY	PRIMARY	4	test.T1.c	1	Child of pushed join@1
select * from T1, T2 where T1.c = T2.a;
a	b	c	a	b
10	11	11	11	12
11	12	12	12	13
explain select * from T1, T2 where T1.a=11 and T1.c = T2.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T1	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	T2	eq_ref	PRIMARY	PRIMARY	4	test.T1.c	1	Child of pushed join@1
select * from T1, T2 where T1.a=11 and T1.c = T2.a;
a	b	c	a	b
11	12	12	12	13
explain select * from T2, T1 where T2.b = T1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T2	ALL	NULL	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	T1	eq_ref	PRIMARY	PRIMARY	4	test.T2.b	1	Child of pushed join@1
select * from T2, T1 where T2.b = T1.a;
a	b	a	b	c
10	11	11	12	12
11	12	12	13	13
explain select * from T2, T1 where T2.a=11 and T2.b = T1.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T2	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	T1	eq_ref	PRIMARY	PRIMARY	4	test.T2.b	1	Child of pushed join@1
select * from T2, T1 where T2.a=11 and T2.b = T1.a;
a	b	a	b	c
11	12	12	13	13
explain select T1.a, T1.c, T2.a, T2.b from T1, T2 where T1.b = T2.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T1	ALL	NULL	NULL	NULL	NULL	3	Parent of 2 pushed join@1
1	SIMPLE	T2	eq_ref	PRIMARY	PRIMARY	4	test.T1.b	1	Child of pushed join@1
select T1.a, T1.c, T2.a, T2.b from T1, T2 where T1.b = T2.a;
a	c	a	b
10	11	11	12
11	12	12	13
explain select T1.a, T1.c, T2.a, T2.b from T1, T2 where T1.a=11 and T1.b = T2.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	T1	const	PRIMARY	PRIMARY	4	const	1	Parent of 2 pushed join@1
1	SIMPLE	T2	eq_ref	PRIMARY	PRIMARY	4	test.T1.b	1	Child of pushed join@1
select T1.a, T1.c, T2.a, T2.b from T1, T2 where T1.a=11 and T1.b = T2.a;
a	c	a	b
11	12	12	13
drop table T1;
drop table T2;
ALTER TABLESPACE ts1
DROP DATAFILE 'datafile.dat'
ENGINE NDB;
drop tablespace ts1
engine ndb;
drop logfile group lg1
engine ndb;
create temporary table old_count 
select counter_name, sum(val) AS val 
from ndbinfo.counters 
where block_name='DBSPJ' 
group by counter_name;
create table T1 (a int NOT NULL, 
b int NOT NULL,
c int NOT NULL,
primary key(a)) 
engine = ndb;
insert into T1 values (1, 2, 2);
insert into T1 values (2, 3, 3);
insert into T1 values (3, 4, 4);
select * from T1 t1, T1 t2 where t1.a = 2 and t2.a = t1.b;
a	b	c	a	b	c
2	3	3	3	4	4
select count(*) from T1 t1, T1 t2 where t2.a = t1.b;
count(*)
2
select count(*) from T1 t1, T1 t2 where t1.a >= 2 and t2.a = t1.b;
count(*)
1
create temporary table new_count 
select counter_name, sum(val) AS val 
from ndbinfo.counters 
where block_name='DBSPJ' 
group by counter_name;
select new_count.counter_name, new_count.val - old_count.val 
from new_count, old_count 
where new_count.counter_name = old_count.counter_name
and new_count.counter_name <> 'LOCAL_READS_SENT'
       and new_count.counter_name <> 'REMOTE_READS_SENT';
counter_name	new_count.val - old_count.val
LOCAL_RANGE_SCANS_SENT	2
LOCAL_TABLE_SCANS_SENT	2
RANGE_SCANS_RECEIVED	2
READS_RECEIVED	1
TABLE_SCANS_RECEIVED	2
select 'READS_SENT', sum(new_count.val - old_count.val) 
from new_count, old_count 
where new_count.counter_name = old_count.counter_name
and (new_count.counter_name = 'LOCAL_READS_SENT'
       or new_count.counter_name = 'REMOTE_READS_SENT');
READS_SENT	sum(new_count.val - old_count.val)
READS_SENT	7
drop table old_count;
drop table new_count;
drop table T1;
create table T1 (
a int primary key, 
b int,
c int) engine = ndb;
insert into T1 values (1, 2, 3);
insert into T1 values (2, 3, 4);
insert into T1 values (3, 4, 5);
explain select * from T1 x, T1 y where x.b=y.a and x.c=4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	4	test.x.b	1	Child of pushed join@1
select * from T1 x, T1 y where x.b=y.a and x.c=4;
a	b	c	a	b	c
2	3	4	3	4	5
lookups
1
explain select * from T1 x, T1 y, T1 z where x.b=y.a and y.c=4 and y.b=z.a;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 3 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	4	test.x.b	1	Child of pushed join@1; Using where with pushed condition
1	SIMPLE	z	eq_ref	PRIMARY	PRIMARY	4	test.y.b	1	Child of pushed join@1
select * from T1 x, T1 y, T1 z where x.b=y.a and y.c=4 and y.b=z.a;
a	b	c	a	b	c	a	b	c
1	2	3	2	3	4	3	4	5
lookups
5
drop table T1;
create table T1(
a int not null,
b int not null,
c int not null,
primary key(a,b))
engine = ndb partition by key (a);
insert into T1 values (10, 10, 11);
insert into T1 values (11, 11, 12);
insert into T1 values (12, 12, 13);
select * from T1 t1, T1 t2 
where t1.a = 10 and t1.b = 10 and 
t2.a = t1.c and t2.b = t1.c;
a	b	c	a	b	c
10	10	11	11	11	12
select * from T1 t1, T1 t2 
where t1.a = 11 and t1.b = 11 and 
t2.a = t1.c and t2.b = t1.c;
a	b	c	a	b	c
11	11	12	12	12	13
select * from T1 t1, T1 t2 
where t2.a = t1.c and t2.b = t1.c
order by t1.a;
a	b	c	a	b	c
10	10	11	11	11	12
11	11	12	12	12	13
select count(*) from T1 t1, T1 t2 
where t1.a = 11 and 
t2.a = t1.c and t2.b = t1.c;
count(*)
1
scan_count
2
pruned_scan_count
1
sorted_scan_count
2
pushed_queries_defined
3
pushed_queries_dropped
0
pushed_queries_executed
3
pushed_reads
4
drop table T1;
create table T1(
d int not null,
c int not null,
a int not null,
b int not null,
primary key using hash (a,b))
engine = ndb partition by key (a);
insert into T1(a,b,c,d) values (10, 10, 11, 11);
insert into T1(a,b,c,d) values (11, 11, 12, 12);
insert into T1(a,b,c,d) values (12, 12, 13, 13);
create index i1 on T1(c,a);
explain select count(*) from T1 t1, T1 t2 where t1.c = 12 and t1.a = 11 and t2.a = t1.d and t2.b = t1.d;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ref	PRIMARY,i1	i1	8	const,const	10	Parent of 2 pushed join@1
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	8	test.t1.d,test.t1.d	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where t1.c = 12 and t1.a = 11 and t2.a = t1.d and t2.b = t1.d;
count(*)
1
drop index i1 on T1;
pruned_scan_count
1
create index i2 on T1(a,b);
explain select count(*) from T1 t1, T1 t2 where t1.a = 11 and t1.b<13 and t2.a = t1.c and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY,i2	i2	8	NULL	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY,i2	PRIMARY	8	test.t1.c,test.t1.c	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where t1.a = 11 and t1.b<13 and t2.a = t1.c and t2.b = t1.c;
count(*)
1
pruned_scan_count
1
explain select count(*) from T1 t1, T1 t2 where t1.a >= 12 and t1.a<=12 and t2.a = t1.c and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY,i2	i2	4	NULL	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY,i2	PRIMARY	8	test.t1.c,test.t1.c	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where t1.a >= 12 and t1.a<=12 and t2.a = t1.c and t2.b = t1.c;
count(*)
0
pruned_scan_count
1
explain select count(*) from T1 t1, T1 t2 where t1.a >= 11 and t1.a<=12 and t2.a = t1.c and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY,i2	i2	4	NULL	10	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY,i2	PRIMARY	8	test.t1.c,test.t1.c	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where t1.a >= 11 and t1.a<=12 and t2.a = t1.c and t2.b = t1.c;
count(*)
1
pruned_scan_count
0
explain select count(*) from T1 t1, T1 t2 where (t1.a = 10 or t1.a=12) and t1.b<13 and t2.a = t1.c and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY,i2	i2	8	NULL	20	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY,i2	PRIMARY	8	test.t1.c,test.t1.c	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where (t1.a = 10 or t1.a=12) and t1.b<13 and t2.a = t1.c and t2.b = t1.c;
count(*)
1
pruned_scan_count
0
explain select count(*) from T1 t1, T1 t2 where t1.a = 10 and (t1.b<11 or t1.b>11) and t2.a = t1.c and t2.b = t1.c;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	PRIMARY,i2	i2	8	NULL	20	Parent of 2 pushed join@1; Using where with pushed condition
1	SIMPLE	t2	eq_ref	PRIMARY,i2	PRIMARY	8	test.t1.c,test.t1.c	1	Child of pushed join@1
select count(*) from T1 t1, T1 t2 where t1.a = 10 and (t1.b<11 or t1.b>11) and t2.a = t1.c and t2.b = t1.c;
count(*)
1
pruned_scan_count
1
drop table T1;
create table T2(
d int not null,
e int not null,
f int not null,
a int not null,
b int not null,
c int not null,
primary key using hash (a,b,c))
engine = ndb partition by key (b,a);
insert into T2(a,b,c,d,e,f) values (1, 2, 3, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (1, 2, 4, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (2, 3, 4, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (3, 4, 5, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (4, 5, 6, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (5, 6, 7, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (6, 7, 8, 1, 2, 3);
insert into T2(a,b,c,d,e,f) values (7, 8, 9, 1, 2, 3);
create index i2_1 on T2(d, a, b, e);
explain select count(*) from T2 x, T2 y where x.d=1 and x.a=1 and x.b=2 and y.a=x.d and y.b=x.e and y.c=3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY,i2_1	i2_1	12	const,const,const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	12	const,test.x.e,const	1	Child of pushed join@1
select count(*) from T2 x, T2 y where x.d=1 and x.a=1 and x.b=2 and y.a=x.d and y.b=x.e and y.c=3;
count(*)
2
drop index i2_1 on T2;
pruned_scan_count
1
create index i2_3 on T2(a, d, b, e);
explain select count(*) from T2 x, T2 y where x.d=1 and x.a=1 and x.b=2 and y.a=x.d and y.b=x.e and y.c=3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ref	PRIMARY,i2_3	i2_3	12	const,const,const	10	Parent of 2 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY,i2_3	PRIMARY	12	const,test.x.e,const	1	Child of pushed join@1
select count(*) from T2 x, T2 y where x.d=1 and x.a=1 and x.b=2 and y.a=x.d and y.b=x.e and y.c=3;
count(*)
2
drop table T2;
pruned_scan_count
1
create table t1 (a binary(10) primary key, b binary(10) not null) engine = ndb;
insert into t1 values ('\0123456789', '1234567890');
insert into t1 values ('1234567890', '\0123456789');
explain
select count(*)
from t1 join t1 as t2 on t2.a = t1.b
where t1.a = '\0123456789';
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	const	PRIMARY	PRIMARY	10	const	1	Parent of 2 pushed join@1; Using where
1	SIMPLE	t2	eq_ref	PRIMARY	PRIMARY	10	test.t1.b	1	Child of pushed join@1
select count(*)
from t1 join t1 as t2 on t2.a = t1.b
where t1.a = '\0123456789';
count(*)
1
drop table t1;
create table t1 (pk int primary key, a int unique key) engine = ndb;
insert into t1 values (1,10), (2,20), (3,30);
set ndb_join_pushdown = false;
explain
select * from t1 as x right join t1 as y
on x.pk = y.pk
and x.pk = y.a
and x.a = y.pk
where y.pk = 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	y	const	PRIMARY	PRIMARY	4	const	1	
1	SIMPLE	x	const	PRIMARY,a	NULL	NULL	NULL	1	Impossible ON condition
select * from t1 as x right join t1 as y
on x.pk = y.pk
and x.pk = y.a
and x.a = y.pk
where y.pk = 2;
pk	a	pk	a
NULL	NULL	2	20
set ndb_join_pushdown = true;
explain
select * from t1 as x right join t1 as y
on x.pk = y.pk
and x.pk = y.a
and x.a = y.pk
where y.pk = 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	y	const	PRIMARY	PRIMARY	4	const	1	
1	SIMPLE	x	const	PRIMARY,a	PRIMARY	4	const	1	
select * from t1 as x right join t1 as y
on x.pk = y.pk
and x.pk = y.a
and x.a = y.pk
where y.pk = 2;
pk	a	pk	a
NULL	NULL	2	20
drop table t1;
create table t1 (pk int primary key, u int not null, a int, b int) engine=ndb;
create index ix1 on t1(b,a);
insert into t1 values (0,1,10,20);
insert into t1 values (1,2,20,30);
insert into t1 values (2,3,30,40);
explain select * from t1 as x join t1 as y join t1 as z on x.u=y.pk and y.a=z.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	x	ALL	NULL	NULL	NULL	NULL	3	Parent of 3 pushed join@1
1	SIMPLE	y	eq_ref	PRIMARY	PRIMARY	4	test.x.u	1	Child of pushed join@1
1	SIMPLE	z	ref	ix1	ix1	5	test.y.a	1	Child of pushed join@1; Using where
select * from t1 as x join t1 as y join t1 as z on x.u=y.pk and y.a=z.b;
pk	u	a	b	pk	u	a	b	pk	u	a	b
0	1	10	20	1	2	20	30	0	1	10	20
1	2	20	30	2	3	30	40	1	2	20	30
drop table t1;
set ndb_join_pushdown = @save_ndb_join_pushdown;
