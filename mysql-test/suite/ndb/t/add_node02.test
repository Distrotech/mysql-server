-- source include/have_ndb.inc
--result_format 2

## Make mtr.pl restart all servers after this test
call mtr.force_restart();

## Show cluster is started with one ndb_mgmd and two ndbd nodes
--replace_regex /mysql-[0-9]*.[0-9]*.[0-9]*/mysql/ /ndb-[0-9]*.[0-9]*.[0-9]*/ndb/ /localhost:[0-9]*/localhost/
--exec $NDB_MGM -e show

--error 0, 1
--remove_file $MYSQLTEST_VARDIR/my.cnf.new

## Add two nodes to my.cnf
# Set ndb_mgmd with node id 3, otherwise the configuration will change and the
# cluster may fail to restart
--source suite/ndb/include/add_two_nodes.inc

--remove_file $MYSQLTEST_VARDIR/my.cnf
--copy_file $MYSQLTEST_VARDIR/my.cnf.new $MYSQLTEST_VARDIR/my.cnf
--remove_file $MYSQLTEST_VARDIR/my.cnf.new

## Reload ndb_mgmd
--source suite/ndb/include/reload_ndb_mgmd.inc
--exec $NDB_MGM -e show >> $NDB_TOOLS_OUTPUT

## Restart the "old" ndbd nodes
--exec $NDB_MGM -e "1 restart" >> $NDB_TOOLS_OUTPUT
--exec $NDB_WAITER --nowait-nodes=40,41 >> $NDB_TOOLS_OUTPUT
--exec $NDB_MGM -e "2 restart" >> $NDB_TOOLS_OUTPUT
--exec $NDB_WAITER --nowait-nodes=40,41 >> $NDB_TOOLS_OUTPUT

## Restart mysqld nodes
let $mysqld_name= mysqld.1.1;
--source include/restart_mysqld.inc
connect (mysqld_2_1,127.0.0.1,root,,test,$MASTER_MYPORT1,);
connection mysqld_2_1;
let $mysqld_name= mysqld.2.1;
--source include/restart_mysqld.inc
connection default;

## Initial start of "new" data nodes
--exec $NDB_NDBD --ndb-nodeid=40 --initial
--exec $NDB_NDBD --ndb-nodeid=41 --initial

## Wait for added nodes started
--exec $NDB_WAITER >> $NDB_TOOLS_OUTPUT 

## Create nodegroup for "new" nodes
--exec $NDB_MGM -e "create nodegroup 40,41" >> $NDB_TOOLS_OUTPUT

## Cluster running after adding two ndbd nodes:
--replace_regex /mysql-[0-9]*.[0-9]*.[0-9]*/mysql/ /ndb-[0-9]*.[0-9]*.[0-9]*/ndb/ /localhost:[0-9]*/localhost/
--exec $NDB_MGM -e show

exit;

