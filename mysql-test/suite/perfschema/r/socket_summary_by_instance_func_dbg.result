# The logging of commands and result sets is mostly disabled.
# There are some messages which help to observe the progress of the test.
# In case some check fails
# - a message about this will be printed
# - some SQL commands which show the unexpected state will be executed
#   (logging enabled)
# - the test might abort
#
# 0. Build or set prequisites
# Disable instrumenation for the default connection thread
# Disable all instrumentation except net IO
# Confirm only one client connection
# Get the default OBJECT_INSTANCE_BEGIN
# Truncate my_socket_summary_by_instance
# Truncate socket summary tables
# 1. Check the base line
# 2. Check connect
# 2.1 Connect fails because the user is unknown
#     length of user name = 4 character
#     length of default db = 9 character
# 2.2 Connect fails because the user is unknown
#     length of user name = 14 character (10 more than in 2.1)
#     length of default db = 9 character
ERROR 28000: Access denied for user 'boot0123456789'@'localhost' (using password: NO)
# 2.3 Connect should pass, host = localhost
#     length of user name  = 4 character
#     length of default db = 9 character
# 2.4 Connect should pass, host = localhost
#     length of user name  = 4 character
#     length of default db = 14 character (5 more than 2.3)
# 2.5 Connect should pass, host = localhost
#     length of user name  = 10 character
#     length of default db = 9 character
GRANT ALL PRIVILEGES ON *.* TO 'root012345'@'localhost';
DROP USER 'root012345'@'localhost';
# 2.6 Connect should pass, host = localhost
#     length of user name  = 14 character
#     length of default db = 9 character
GRANT ALL PRIVILEGES ON *.* to 'root0123456789'@'localhost';
DROP USER 'root0123456789'@'localhost';
# 3 Check SELECTs
# 3.1 Check a SELECT ending with server sending an error message.
#     Error message is short (unknown table).
SELECT col2 FROM does_not_exist;
ERROR 42S02: Table 'mysqltest.does_not_exist' doesn't exist
# 3.2 Check a SELECT ending with server sending an error message.
#     Error message is longer (syntax error).
#     Now the statement is a bit longer but the error message
#     length does again not depend on statement.
SELECT col2 FROM does_not_exist WHERE col1 = 0;
ERROR 42S02: Table 'mysqltest.does_not_exist' doesn't exist
# 3.3 Check a SELECT earning an empty result set.
SELECT col2 FROM mysqltest.my_aux WHERE col1 = 0;
col2
# 3.4 Check a SELECT earning an empty result set.
#     Short column name is replaced by longer alias.
SELECT col2 "my_lovely_col" FROM mysqltest.my_aux WHERE col1 = 0;
my_lovely_col
# 3.5 Check a SELECT earning one row with an empty string.
SELECT col2 FROM mysqltest.my_aux WHERE col1 = 1;
col2

# 3.6 Check a SELECT earning one row with one string one char long.
SELECT col2 FROM mysqltest.my_aux WHERE col1 = 2;
col2
a
# 3.7 Check a SELECT earning one row with one string 1024 char long.
SELECT col2 FROM mysqltest.my_aux WHERE col1 = 3;
col2
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
# 4. Check delta details
# 4.1 Check that increased COUNT_* leads to increased
#     - increased COUNT_* leads to increased
#       SUM_TIMER_* and SUM_NUMBER_OF_BYTES_*
#     - no change in COUNT_* leads to no change in
#       SUM_TIMER_* and SUM_NUMBER_OF_BYTES_*
# 4.2 Results must be stable
#     Everything except "client_connection" for default connection
#     because the default connection runs include/wait_till_sleep.inc
#     which means a varying amount of statements.
# 4.3 Check the connects
# 4.3.1 Successful connects with different length of user name
SELECT t2.SUM_NUMBER_OF_BYTES_READ - t1.SUM_NUMBER_OF_BYTES_READ as DIFF_BREAD,
t2.SUM_NUMBER_OF_BYTES_WRITE - t1.SUM_NUMBER_OF_BYTES_WRITE as DIFF_BWRITE, EVENT_NAME
FROM mysqltest.socket_summary_by_instance_detail t2
JOIN mysqltest.socket_summary_by_instance_detail t1
USING (EVENT_NAME, run)
WHERE t2.OBJECT_INSTANCE_BEGIN <> @default_object_instance_begin
AND t1.OBJECT_INSTANCE_BEGIN <> @default_object_instance_begin
AND t2.statement LIKE 'Connect%root0123456789,%'
  AND t1.statement LIKE 'Connect%root012345,%'
  AND t1.EVENT_NAME NOT LIKE '%server_unix_socket%'
  AND t2.COUNT_READ > 0 and t1.COUNT_READ > 0 and
t2.COUNT_WRITE > 0 and t1.COUNT_WRITE > 0
AND run = 1;
DIFF_BREAD	DIFF_BWRITE	EVENT_NAME
4	0	wait/io/socket/sql/client_connection
SELECT COUNT_READ,  SUM_NUMBER_OF_BYTES_READ,
COUNT_WRITE, SUM_NUMBER_OF_BYTES_WRITE,
COUNT_MISC, EVENT_NAME, statement
FROM mysqltest.socket_summary_by_instance_detail t2
WHERE t2.OBJECT_INSTANCE_BEGIN <> @default_object_instance_begin
AND t2.statement LIKE 'Connect%root0123456789,%'
  AND run = 1;
COUNT_READ	SUM_NUMBER_OF_BYTES_READ	COUNT_WRITE	SUM_NUMBER_OF_BYTES_WRITE	COUNT_MISC	EVENT_NAME	statement
0	0	0	0	1	wait/io/socket/sql/server_unix_socket	Connect (con1,localhost,root0123456789,,mysqltest,,)
0	0	0	0	0	wait/io/socket/sql/server_tcpip_socket	Connect (con1,localhost,root0123456789,,mysqltest,,)
4	84	2	101	2	wait/io/socket/sql/client_connection	Connect (con1,localhost,root0123456789,,mysqltest,,)
SELECT COUNT_READ,  SUM_NUMBER_OF_BYTES_READ,
COUNT_WRITE, SUM_NUMBER_OF_BYTES_WRITE,
COUNT_MISC, EVENT_NAME, statement
FROM mysqltest.socket_summary_by_instance_detail t1
WHERE t1.OBJECT_INSTANCE_BEGIN <> @default_object_instance_begin
AND t1.statement LIKE 'Connect%root012345,%'
  AND run = 1;
COUNT_READ	SUM_NUMBER_OF_BYTES_READ	COUNT_WRITE	SUM_NUMBER_OF_BYTES_WRITE	COUNT_MISC	EVENT_NAME	statement
0	0	0	0	1	wait/io/socket/sql/server_unix_socket	Connect (con1,localhost,root012345,,mysqltest,,)
0	0	0	0	0	wait/io/socket/sql/server_tcpip_socket	Connect (con1,localhost,root012345,,mysqltest,,)
3	80	2	101	1	wait/io/socket/sql/client_connection	Connect (con1,localhost,root012345,,mysqltest,,)
# 4.3.2 Failing (->2.1) vs. passing (-> 2.3) connect
#       FIXME: To be implemented after the bug fixes
# 4.3.3 2.3 vs. 2.4
#       FIXME: To be implemented after the bug fixes
# 4.4 Check the differences caused by SQL statements
#       FIXME: To be implemented after the bug fixes
# 5. Cleanup
