
#
# Tests for the performance_schema host_cache.
#
# FIXME
# Test scenario:
# - a client connects on a TCP/IPv4 socket
# - the client IPv4 can be obtained
# - the client hostname can be obtained
# - IP for that hostname can not be obtained
# - there are no grants for the client IP
# Test results:
# - connection is refused
# - peer_addr_error is unchanged
# - the host_cache records the failing IP and hostname
#

--source include/not_embedded.inc
--source include/have_debug.inc
--source include/have_perfschema.inc

# [Warning] Host name 'santa.claus.ipv4.example.com' could not be resolved:
# Name or service not known
call mtr.add_suppression("santa.claus.ipv4.example.com");

flush status;
flush hosts;
select @@global.debug;
show global status like "%peer%";

grant select on test.* to 'root'@'santa.claus.ipv4.example.com';
grant select on test.* to 'root'@'192.0.2.4';

connect (con1,"127.0.0.1",root,,test,$MASTER_MYPORT,);
select "Con1 is alive";
select current_user();
disconnect con1;

--connection default
set global debug= "+d,vio_peer_addr_fake_ipv4,getnameinfo_fake_ipv4,getaddrinfo_error_noname";

connect (con2,"127.0.0.1",root,,test,$MASTER_MYPORT,);
select "Con2 is alive";
select current_user();
disconnect con2;

--connection default
--source ../include/hostcache_dump.inc

connect (con3,"127.0.0.1",root,,test,$MASTER_MYPORT,);
select "Con3 is alive";
select current_user();
disconnect con3;

--connection default
--source ../include/hostcache_dump.inc

revoke select on test.* from 'root'@'santa.claus.ipv4.example.com';
revoke select on test.* from 'root'@'192.0.2.4';
drop user 'root'@'santa.claus.ipv4.example.com';
drop user 'root'@'192.0.2.4';

set global debug= default;

