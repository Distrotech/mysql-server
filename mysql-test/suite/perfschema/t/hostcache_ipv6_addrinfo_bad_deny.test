
#
# Tests for the performance_schema host_cache.
#
# FIXME
# Test scenario: (con2)
# - a client connects on a TCP/IPv4 socket
# - the client IPv4 can be obtained
# - the client IPv4 is not in the cache
# - the client hostname can be obtained
# - IPs for that hostname can be obtained
# - none of the IPs match the client IP
# - there are no grants for the client IP
# Test results:
# - connection is refused
# - peer_addr_errors is unchanged
# - the host_cache records the failing IP with no hostname
#
# Test scenario: (con3)
# - a client connects on a TCP/IPv4 socket
# - the client IPv4 can be obtained
# - the client IPv4 is in the cache with no hostname
# - there are no grants for the client IP
# Test results:
# - connection is refused
# - peer_addr_errors is unchanged
# - the host_cache is unchanged

--source include/not_embedded.inc
--source include/have_debug.inc
--source include/have_ipv6.inc
--source include/have_perfschema.inc

# [Warning] Hostname 'santa.claus.ipv6.example.com' does not resolve to '2001:db8::6:6'.
# [Note] Hostname 'santa.claus.ipv6.example.com' has the following IP addresses:
# [Note]  - 2001:db8::6:7e
# [Note]  - 2001:db8::6:7f
call mtr.add_suppression("santa.claus.ipv6.example.com");


flush status;
flush hosts;
select @@global.debug;
show global status like "%peer%";

connect (con1,"::1",root,,test,$MASTER_MYPORT,);
select "Con1 is alive";
select current_user();
disconnect con1;

--connection default
set global debug= "+d,vio_peer_addr_fake_ipv6,getnameinfo_fake_ipv6,getaddrinfo_fake_bad_ipv6";

--disable_query_log
--error ER_HOST_NOT_PRIVILEGED
connect (con2,"::1",root,,test,$MASTER_MYPORT,);
--enable_query_log

--connection default
--source ../include/hostcache_dump.inc

--disable_query_log
--error ER_HOST_NOT_PRIVILEGED
connect (con3,"::1",root,,test,$MASTER_MYPORT,);
--enable_query_log

--connection default
--source ../include/hostcache_dump.inc

set global debug= default;

