# Copyright (c) 2003, 2011, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; version 2 of
# the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301  USA
#
# Some functional checks for the content of performance_schema.socket_instances.
#

--source include/not_embedded.inc
--source include/not_windows.inc

# Take a snapshot of SOCKET_INSTANCES
--echo # Take a snapshot of SOCKET_INSTANCES
CREATE TEMPORARY TABLE my_socket_instances AS
SELECT * FROM performance_schema.socket_instances;

# Get the thread id of this connection
--echo # Get thread id of the default connection
SELECT THREAD_ID INTO @thread_id
FROM performance_schema.threads
WHERE PROCESSLIST_ID = CONNECTION_ID();

let $con0_thread_id = `SELECT @thread_id`;

#
# ESTABLISH TCP/IP CONNECTION 1
#
# Have a connection with IP = '127.0.0.1,'

--echo # Establish local TCP/IP connection (con1,127.0.0.1,root,,test,,)
--disable_query_log
--connect (con1,127.0.0.1,root,,test,,$MASTER_MYPORT)
--enable_query_log

--echo # Store the thread id of connection 1 (tcp/ip)
SELECT THREAD_ID INTO @thread_id
FROM performance_schema.threads
WHERE PROCESSLIST_ID = CONNECTION_ID();

--echo # Store the port of connection 1 (tcp/ip)
eval SELECT PORT INTO @port
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

let $con1_thread_id= `SELECT @thread_id`;
let $con1_port = `SELECT @port`;

--echo # Switch to connection default
--connection default

#
# ESTABLISH TCP/IP CONNECTION 2
#
# Have a connection with IP = '127.0.0.1,'

--echo # Establish a second local TCP/IP connection (con2,127.0.0.1,root,,test,,)
--disable_query_log
--connect (con2,127.0.0.1,root,,test,,$MASTER_MYPORT)
--enable_query_log

--echo # Store the thread_id of connection 2 (tcp/ip)
SELECT THREAD_ID INTO @thread_id
FROM performance_schema.threads
WHERE PROCESSLIST_ID = CONNECTION_ID();

--echo # Store the port of connection 2 (tcp/ip)
eval SELECT PORT INTO @port
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

let $con2_thread_id= `SELECT @thread_id`;
let $con2_port = `SELECT @port`;

--echo # Switch to connection default
--connection default

#
# ESTABLISH LOCAL UNIX DOMAIN CONNECTION
#
# Connect via mysql sock file

--echo # Establish local unix domain connection (con3,localhost,root,,test,,)
--connect(con3,localhost,root,,test,,)

--echo # Store the thread id of connection 3 (unix domain)
SELECT THREAD_ID INTO @thread_id
FROM performance_schema.threads
WHERE PROCESSLIST_ID = CONNECTION_ID();

--echo # Store the port of connection 3 (unix domain)
eval SELECT PORT INTO @port
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

let $con3_port = `SELECT @port`;
let $con3_thread_id= `SELECT @thread_id`;

--echo # Switch to connection default
--connection default

#
# VERIFY EVENT NAMES
#

--echo # EVENT_NAME is the "wait/io/socket/*" instrument identifier.

SELECT COUNT(*) = 0 AS "Expect 1"
FROM performance_schema.socket_instances
WHERE EVENT_NAME NOT LIKE 'wait/io/socket/%';

#
# VERIFY UNIQUE EVENT IDs
#

--echo # OBJECT_INSTANCE_BEGIN is an arbitrary identifier, guaranteed to be unique.

SELECT COUNT(*) = COUNT(DISTINCT OBJECT_INSTANCE_BEGIN) AS "Expect 1"
FROM performance_schema.socket_instances;

#
# VERIFY UNIQUE SOCKET ID
#

--echo # SOCKET_ID is the internal file handle assigned to the socket.

SELECT COUNT(*) = COUNT(DISTINCT SOCKET_ID) AS "Expect 1"
FROM performance_schema.socket_instances;

#
# VERIFY UNIQUE THREAD IDs
#

--echo # Characteristics per our thread
--echo #    There must be only one entry with our thread_id

--disable_query_log
eval set @thread_id= $con0_thread_id;
--enable_query_log

eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

#
# VERIFY UNIQUE PORT NUMBERS FOR TCP/IP CLIENTS
#

--echo # TCP/IP connections should have a unique port number
--disable_query_log
eval set @port= $con1_port;
--enable_query_log

--echo # Connection 1 (tcp/ip)
eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE PORT = @port;

--disable_query_log
eval set @port= $con2_port;
--enable_query_log

--echo # Connection 2 (tcp/ip)
eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE PORT = @port;

#
# VERIFY CONNECTION DETAILS FOR THE DEFAULT CONNECTION
#

--echo #    Check the content for the default connection (unix domain)
# EVENT_NAME                           OBJECT_INSTANCE_BEGIN  THREAD_ID  SOCKET_ID  IP  PORT    STATE
# wait/io/socket/com/client_connection       139799531958280         16         37         0    ACTIVE

--disable_query_log
eval set @thread_id = $con0_thread_id;
--enable_query_log

SELECT EVENT_NAME = 'wait/io/socket/com/client_connection'
   AND IP = '' AND PORT = 0 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

#
# VERIFY SERVER LISTENING SOCKET, TCP/IP
#

--echo # Characteristics of 'server_tcpip_socket' entry
--echo #    Server listening socket, TCP/IP
--echo #    There is only one entry with 'wait/io/socket/com/server_tcpip_socket'.
--echo #    It shares the same thread id as 'wait/io/socket/com/server_unix_socket'.

SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_tcpip_socket';

# Store the thread id of server_tcpip_socket
--echo # Get the 'server_tcpip_socket' thread id

SELECT THREAD_ID INTO @thread_id
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_tcpip_socket';

let $server_tcpip_thread_id= `SELECT @thread_id`;

--echo #    Check the content.
--replace_result $MASTER_MYPORT <MASTER_MYPORT>

eval SELECT THREAD_ID = @thread_id
     AND PORT = $MASTER_MYPORT AND IP = '0.0.0.0'
     AND STATE = 'ACTIVE' AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_tcpip_socket';

#
# VERIFY SERVER LISTENING SOCKET, UNIX DOMAIN
#

--echo # Characteristics of 'server_unix_socket' entry
--echo #    Server listening socket, unix domain (socket file)
--echo #    There is only one entry with 'wait/io/socket/com/server_unix_socket'.
--echo #    It shares the same thread id as 'wait/io/socket/com/server_tcpip_socket'.

SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_unix_socket';

# Store the thread id of 'server_unix_socket'
--echo # Get the 'server_unix_socket' thread id

SELECT THREAD_ID INTO @thread_id
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_unix_socket';

let $server_unix_thread_id= `SELECT @thread_id`;

--echo #    Check the content.
eval SELECT THREAD_ID = @thread_id
     AND PORT = 0 AND IP = ''
     AND STATE = 'ACTIVE' AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE EVENT_NAME = 'wait/io/socket/com/server_unix_socket';

#
# VERIFY SERVER LISTENING SOCKET THREAD IDs
#

--echo # Server listening sockets (TCP and Unix) are handled on the same thread

--disable_query_log
eval set @thread_id = $server_tcpip_thread_id;
--enable_query_log

eval SELECT COUNT(*) = 2 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

--disable_query_log
eval set @thread_id = $server_unix_thread_id;
--enable_query_log

eval SELECT COUNT(*) = 2 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

--echo #Compare server listener socket thread ids
--disable_query_log
eval SELECT ($server_tcpip_thread_id = $server_unix_thread_id) into @match_thread_id;
--enable_query_log

select @match_thread_id;

#
# VERIFY TCP/IP CLIENT CONNECTION 1
#

# EVENT_NAME                           OBJECT_INSTANCE_BEGIN  THREAD_ID  SOCKET_ID   IP           PORT  STATE
# wait/io/socket/com/client_connection       140707865187120         18         59   127.0.0.1   59298   IDLE or ACTIVE

--echo #    Check content for client connection 1 (tcpip)

--disable_query_log
eval set @port = $con1_port;
eval set @thread_id = $con1_thread_id;
--enable_query_log

eval SELECT EVENT_NAME = 'wait/io/socket/com/client_connection'
        AND IP = '127.0.0.1'
        AND PORT = @port
AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

--echo # Characteristics of entries with THREAD_ID of con1
--echo #    There is only one entry with this id.

eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

#
# VERIFY TCP/IP CLIENT CONNECTION 2
#

# EVENT_NAME                           OBJECT_INSTANCE_BEGIN  THREAD_ID  SOCKET_ID   IP           PORT  STATE
# wait/io/socket/com/client_connection       140707865187120         18         59   127.0.0.1   59298   IDLE or ACTIVE

--echo #    Check content for client connection 2 (tcpip)

--disable_query_log
eval set @port = $con2_port;
eval set @thread_id = $con2_thread_id;
--enable_query_log

eval SELECT EVENT_NAME = 'wait/io/socket/com/client_connection'
        AND IP = '127.0.0.1'
        AND PORT = @port
AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

--echo # Characteristics of entries with THREAD_ID of con2
--echo #    There is only one entry with this id.

eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

#
# VERIFY LOCAL CONNECTION, UNIX DOMAIN
#

# EVENT_NAME                           OBJECT_INSTANCE_BEGIN  THREAD_ID  SOCKET_ID  IP  PORT  STATE
# wait/io/socket/com/client_connection       139799531958280         16         37         0   IDLE or ACTIVE

--echo #    Check the content for client connection 3 (unix domain).

--disable_query_log
eval set @thread_id = $con3_thread_id;
--enable_query_log

eval SELECT EVENT_NAME = 'wait/io/socket/com/client_connection'
     AND IP = ''
     AND PORT = 0
AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

--echo # Characteristics of entries with THREAD_ID of con3
--echo #    There is only one entry with this id.

eval SELECT COUNT(*) = 1 AS 'Expect 1'
FROM performance_schema.socket_instances
WHERE THREAD_ID = @thread_id;

#
# LIST CLIENT CONNECTIONS
#

--echo # Show differences to socket_instances before con1, con2 and con3 connecting

SELECT EVENT_NAME, IP
FROM performance_schema.socket_instances
WHERE (EVENT_NAME,OBJECT_INSTANCE_BEGIN,THREAD_ID,SOCKET_ID,IP,PORT,STATE)
NOT IN (SELECT EVENT_NAME,OBJECT_INSTANCE_BEGIN,THREAD_ID,SOCKET_ID,IP,PORT,STATE
        FROM my_socket_instances)
ORDER BY THREAD_ID;

--connection default

#
# DROP CLIENT CONNECTIONS
#

--echo # Disconnect con1, con2 and con3
--connection con1
--disconnect con1
--source include/wait_until_disconnected.inc
--connection con2
--disconnect con2
--source include/wait_until_disconnected.inc
--connection con3
--disconnect con3
--source include/wait_until_disconnected.inc
--connection default

#
# VERIFY CONNECTIONS DROPPED
#

--echo # Show differences to socket_instances before con1,con1 connecting.
--echo # There should be none.

SELECT *
FROM performance_schema.socket_instances
WHERE (EVENT_NAME,OBJECT_INSTANCE_BEGIN,THREAD_ID,SOCKET_ID,IP,PORT,STATE)
NOT IN (SELECT EVENT_NAME,OBJECT_INSTANCE_BEGIN,THREAD_ID,SOCKET_ID,IP,PORT,STATE
        FROM my_socket_instances)
ORDER BY THREAD_ID;

