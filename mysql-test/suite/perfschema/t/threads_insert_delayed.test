# Copyright (c) 2010, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software Foundation,
# 51 Franklin Street, Suite 500, Boston, MA 02110-1335 USA


# Tests for special content of performance_schema.THREADS
#
# The feature INSERT DELAYED (supported by MyISAM,MEMORY,ARCHIVE,BLACKHOLE)
#    causes that a "delayed_insert" thread shows up as soon as the first
#    INSERT DELAYED was issued.

--source include/not_embedded.inc
--source include/have_perfschema.inc

--disable_warnings
DROP TABLE IF EXISTS t1;
DROP TEMPORARY TABLE IF EXISTS t2;
--enable_warnings
CREATE TABLE t1 (f1 BIGINT) ENGINE = MyISAM;
CREATE TEMPORARY TABLE t2 AS
SELECT thread_id FROM performance_schema.THREADS WHERE 1 = 2;

# Reveal that the delayed_insert thread does not exist.
# Note(mleich): This expectation is probably not all time true.
SELECT COUNT(*) = 0 AS expect_1 FROM performance_schema.THREADS
WHERE name = 'thread/sql/delayed_insert';

INSERT INTO t2 SELECT thread_id
FROM performance_schema.THREADS;

let $wait_condition= SELECT COUNT(*) = 1 AS expect_0 FROM performance_schema.THREADS
WHERE name = 'thread/sql/delayed_insert';
INSERT DELAYED INTO t1 SET f1 = SLEEP(3);
--source include/wait_condition.inc

# Expect to get
# thread/sql/delayed_insert	FOREGROUND	YES	root	localhost
SELECT name, type, instrumented, processlist_user, processlist_host
FROM performance_schema.THREADS
WHERE thread_id NOT IN (SELECT thread_id FROM t2);

DROP TABLE t1;
DROP TEMPORARY TABLE t2;

