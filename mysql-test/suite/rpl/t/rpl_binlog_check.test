# BUG#11746146: 23894: EMYSQLBINLOG OUTPUTS SET INSERT_ID=N STATEMENTS UNNECESARILY WITH --DATABA. 
#

#
# mysqlbinlog --database=bar N-bin.000002 >002bar.txt 
# will output all the SET INSERT_ID=n assignments in the binary log even if the 
# database bar isn't mentioned in the binary log.
#

--source include/master-slave.inc
--source include/rpl_reset.inc

call mtr.add_suppression("Unsafe statement written to the binary log using statement format since BINLOG_FORMAT = STATEMENT.");	
--sync_slave_with_master
use test;
--disable_warnings
drop table if exists foo;
--enable_warnings
create table foo (i int, j int, bar int auto_increment, unique key (bar))
engine= innodb;
set autocommit= 0;
--disable_warnings
insert into foo (i, j) values (Rand(), @2);
--enable_warnings
commit;
drop table if exists foo;
--enable_warnings

--let $MYSQLD_DATADIR= `select @@datadir`
--let $binlog_file= query_get_value(SHOW MASTER STATUS, File, 1)
--let $prefix= `select uuid()`
--let $out_file= $MYSQLTEST_VARDIR/tmp/$prefix.out
--exec $MYSQL_BINLOG --database=bar $MYSQLD_DATADIR/$binlog_file > $out_file

--let OUTF= $out_file

--echo # Search for occurrences of SET INSERT_ID in the output from mysqlbinlog
--echo # Search for occurrences of RAND in the output from mysqlbinlog
--echo # Search for occurrences of USER_VAR in the output from mysqlbinlog

perl;
  use strict;
  my $outf= $ENV{'OUTF'} or die "OUTF not set";
  open(FILE, "$outf") or die("Unable to open $outf: $!\n");
  my $count_intvar = () = grep(/SET INSERT_ID/gi,<FILE>);
  my $count_rand = () = grep(/RAND/gi,<FILE>);
  my $count_user_var = () = grep(/User_var/gi,<FILE>);
  print "- Occurrences: $count_intvar\n";
  print "- Occurrences: $count_rand\n";
  print "- Occurrences: $count_user_var\n";
  close(FILE);
EOF

--remove_file $out_file
--source include/rpl_end.inc
