#
# This file contains tests for WL#5096 and bug fixes. 
#

-- source include/rpl_chained_3_hosts.inc
-- source include/have_binlog_format_row.inc

-- connection mysqld_a
-- source include/have_innodb.inc
-- connection mysqld_b
-- source include/have_innodb.inc
-- connection mysqld_c
-- source include/have_innodb.inc
-- connection mysqld_a

#
# WL#5096
#
#   Test Description
#   ================
# 
#   WL#5096 Tests.
# 
#   In this file we will run tests that mix engines, indexes
#   and blobs.
#

-- echo ###################################################################
-- echo ###################################################################
-- echo # engines and binlog-row-image mixes                              #
-- echo ###################################################################
-- echo ###################################################################
-- let $row_img_test_script= extra/rpl_tests/rpl_row_img.test
-- source include/rpl_row_img_general_loop.inc

-- echo ###################################################################
-- echo ###################################################################
-- echo # engines and binlog-row-image mix for different index structures #
-- echo ###################################################################
-- echo ###################################################################
-- let $row_img_test_script= extra/rpl_tests/rpl_row_img_diff_indexes.test
-- source include/rpl_row_img_general_loop.inc

-- echo ###################################################################
-- echo ###################################################################
-- echo # engines and binlog-row-image mixes for blobs                    #
-- echo ###################################################################
-- echo ###################################################################
-- let $row_img_test_script= extra/rpl_tests/rpl_row_img_blobs.test
-- source include/rpl_row_img_general_loop.inc

#
# BUG#49100: RBR: Unexpected behavior when AI contains no usable data 
#            for slave columns
#

-- connection mysqld_c
-- source include/stop_slave.inc
RESET MASTER;
RESET SLAVE;

-- connection mysqld_b
-- source include/stop_slave.inc
RESET MASTER;
RESET SLAVE;

-- connection mysqld_a
RESET MASTER;
RESET SLAVE;

-- connection mysqld_c
-- source include/start_slave.inc

-- connection mysqld_b
-- source include/start_slave.inc

-- disable_warnings
DROP TABLE IF EXISTS t1;
-- enable_warnings
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_a

-- let $row_img_set=mysqld_a:MINIMAL:N,mysqld_b:MINIMAL:Y,mysqld_c:MINIMAL:Y
-- source include/rpl_row_img_set.inc

-- echo #### case #1: AI: no values logged

CREATE TABLE t1 (c1 int DEFAULT 100);
INSERT INTO t1 VALUES ();
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
DROP TABLE t1;
-- source include/rpl_chained_3_hosts_sync.inc

-- echo #### case #2: AI: not empty but slave does not have usable data for its columns (INSERT)

-- connection mysqld_c
CREATE TABLE t1 (c1 int DEFAULT 100);

-- connection mysqld_b
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100);
SET SQL_LOG_BIN=1;

-- connection mysqld_a
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100, c2 int, primary key(c2));
SET SQL_LOG_BIN=1;

INSERT INTO t1(c2) VALUES (1);
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
DROP TABLE t1;
-- source include/rpl_chained_3_hosts_sync.inc

-- echo #### case #3: BI: usable columns on the slave, AI: no usable columns on the slave

-- connection mysqld_c
CREATE TABLE t1 (c1 int DEFAULT 100);

-- connection mysqld_b
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100);
SET SQL_LOG_BIN=1;

-- connection mysqld_a
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100, c2 int);
SET SQL_LOG_BIN=1;

INSERT INTO t1 VALUES (1,1);
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
UPDATE t1 SET c2=2 WHERE c1=1 AND c2=1;
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
DROP TABLE t1;
-- source include/rpl_chained_3_hosts_sync.inc

-- echo #### case #4: AI, BI: no usable columns on the slave (NOOP UPDATE).
-- echo ####          

-- connection mysqld_c
CREATE TABLE t1 (c1 int DEFAULT 100);

-- connection mysqld_b
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100);
SET SQL_LOG_BIN=1;

-- connection mysqld_a
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 int DEFAULT 100, c2 int, c3 int, primary key(c2));
SET SQL_LOG_BIN=1;

INSERT INTO t1 VALUES (1,1,1);
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
UPDATE t1 SET c3=300 WHERE c2=1;
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
DROP TABLE t1;
-- source include/rpl_chained_3_hosts_sync.inc

-- echo #### case #5: BI: no usable columns on the slave, AI: usable columns on the slave (slave must stop).
-- echo ####          

-- connection mysqld_c
CREATE TABLE t1 (c1 INT DEFAULT 100);

-- connection mysqld_b
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 INT DEFAULT 100);
SET SQL_LOG_BIN=1;

-- connection mysqld_a
SET SQL_LOG_BIN=0;
CREATE TABLE t1 (c1 INT DEFAULT 100, c2 INT PRIMARY KEY);
SET SQL_LOG_BIN=1;

INSERT INTO t1 VALUES (1,1);
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- source include/rpl_chained_3_hosts_sync.inc
-- connection mysqld_b
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_c
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;

-- connection mysqld_a
UPDATE t1 SET c1=300 WHERE c2=1;
SHOW VARIABLES LIKE 'server_id';
SELECT * FROM t1;
-- connection mysqld_b
SET SQL_LOG_BIN=0;
call mtr.add_suppression("Slave: Can\'t find record in \'t1\' Error_code: 1032");
SET SQL_LOG_BIN=1;
-- source include/wait_for_slave_sql_to_stop.inc
-- let $errno=query_get_value("show slave status", Last_SQL_Errno, 1)
if (`SELECT $errno <> 1032`)
{
  -- echo ### UNEXPECTED ERROR AT THE SLAVE: $errno
  SHOW SLAVE STATUS;
  -- die
}
-- echo ### SLAVE STOPPED HAS EXPECTED!

## CLEAN UP

-- connection mysqld_c
-- source include/stop_slave.inc
RESET MASTER;
RESET SLAVE;

-- connection mysqld_b
-- source include/stop_slave.inc
RESET MASTER;
RESET SLAVE;

-- connection mysqld_a
RESET MASTER;
RESET SLAVE;

-- connection mysqld_c
-- source include/start_slave.inc

-- connection mysqld_b
-- source include/start_slave.inc

-- connection mysqld_a
-- disable_warnings
DROP TABLE IF EXISTS t1;
-- enable_warnings
-- source include/rpl_chained_3_hosts_sync.inc

-- let $row_img_set=mysqld_a:FULL:N,mysqld_b:FULL:Y,mysqld_c:FULL:Y
-- source include/rpl_row_img_set.inc

