--source include/have_ndb.inc
--source suite/rpl_ndb/ndb_master-slave.inc

connect (cluster1, 127.0.0.1,root,,test,$CLUSTER1_MYPORT);
connect (cluster2, 127.0.0.1,root,,test,$CLUSTER2_MYPORT);
connect (cluster3, 127.0.0.1,root,,test,$CLUSTER3_MYPORT);


# set up replication 1->2->3
--connection cluster1
show variables like 'server_id';
reset master;
select @cluster1_server_id:=(variable_value+0) 
       from information_schema.global_variables 
       where variable_name like 'server_id';

let $CLUSTER1_SERVER_ID= query_get_value('select @cluster1_server_id as v',v,1);

--connection cluster2
show variables like 'server_id';
stop slave;
reset master;
reset slave;
start slave;

--connection cluster3
show variables like 'server_id';
stop slave;
reset master;
reset slave;
start slave;

--echo First show replication 1->2->3
--connection cluster1
use test;
create table t1(a int primary key, b varchar(50)) engine=ndb;

insert into t1 values (1,'Summertime');

--sync_slave_with_master cluster2
--echo Cluster2 has insert and apply_status from Cluster1
show variables like 'server_id';
--replace_column 2 # 3 # 4 # 5 #
select * from mysql.ndb_apply_status order by server_id;
select * from test.t1;

--sync_slave_with_master cluster3
--echo Cluster3 has insert and apply_status from Cluster1+2
show variables like 'server_id';
--replace_column 2 # 3 # 4 # 5 #
select * from mysql.ndb_apply_status order by server_id;
select * from test.t1;

--echo Break Cluster3's link with Cluster2
--connection cluster3
stop slave;

--echo Make further changes on Cluster1
--connection cluster1
insert into test.t1 values (2, "The cotton is high");
insert into test.t1 values (3, "Daddys rich");

--sync_slave_with_master cluster2
--echo Show changes exist on Cluster2
select * from test.t1 order by a;

--echo Check data on Cluster3
--connection cluster3
select * from test.t1 order by a;

--echo Now change Cluster3 to skip-over Cluster2 and get binlog direct from Cluster1

--replace_column 2 # 3 # 4 # 5 #
select * from mysql.ndb_apply_status order by server_id;

--disable_query_log
--disable_result_log
eval select @binlog_file_name:=log_name from mysql.ndb_apply_status 
            where server_id = $CLUSTER1_SERVER_ID;
eval select @binlog_file_pos:=end_pos from mysql.ndb_apply_status
            where server_id = $CLUSTER1_SERVER_ID;

let $CLUSTER1_LOG_FILE= query_get_value('select @binlog_file_name as v', v, 1);
let $CLUSTER1_LOG_POS= query_get_value('select @binlog_file_pos as v', v, 1);

eval change master to master_host='$CLUSTER1_HOST', 
                      master_port=$CLUSTER1_MYPORT, 
                      master_user='$CLUSTER1_USER',
                      master_log_file='$CLUSTER1_LOG_FILE',
                      master_log_pos=$CLUSTER1_LOG_POS;
--enable_query_log
--enable_result_log

start slave;

--connection cluster1
--sync_slave_with_master cluster3

--echo Now show that cluster 3 is successfully replicating from Cluster1
--connection cluster3
select * from test.t1 order by a;


--echo Clean up
--connection cluster1
drop table test.t1;

--sync_slave_with_master cluster2
--connection cluster1
--sync_slave_with_master cluster3



